<?php

/**
 * Base class that represents a row from the 'alpza_miembro_especifico' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Nov 24 15:06:49 2012
 *
 * @package    lib.model.om
 */
abstract class BaseAlpzaMiembroEspecifico extends BaseObject  implements Persistent {


	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        AlpzaMiembroEspecificoPeer
	 */
	protected static $peer;

	/**
	 * The value for the id_alpza_miembro_especifico field.
	 * @var        int
	 */
	protected $id_alpza_miembro_especifico;

	/**
	 * The value for the id_alpza_miembro field.
	 * @var        int
	 */
	protected $id_alpza_miembro;

	/**
	 * The value for the visitas_anuales field.
	 * @var        string
	 */
	protected $visitas_anuales;

	/**
	 * The value for the propiedad field.
	 * @var        string
	 */
	protected $propiedad;

	/**
	 * The value for the propietario field.
	 * @var        string
	 */
	protected $propietario;

	/**
	 * The value for the administracion field.
	 * @var        string
	 */
	protected $administracion;

	/**
	 * The value for the administrador field.
	 * @var        string
	 */
	protected $administrador;

	/**
	 * The value for the lucro field.
	 * @var        string
	 */
	protected $lucro;

	/**
	 * The value for the ofrece_asesoria field.
	 * @var        string
	 */
	protected $ofrece_asesoria;

	/**
	 * The value for the area_asesoria field.
	 * @var        string
	 */
	protected $area_asesoria;

	/**
	 * The value for the personal_permanente field.
	 * @var        string
	 */
	protected $personal_permanente;

	/**
	 * The value for the personal_temporal field.
	 * @var        string
	 */
	protected $personal_temporal;

	/**
	 * The value for the horario_atencion field.
	 * @var        string
	 */
	protected $horario_atencion;

	/**
	 * The value for the senalizacion field.
	 * @var        string
	 */
	protected $senalizacion;

	/**
	 * The value for the senalizacion_porcentaje field.
	 * @var        string
	 */
	protected $senalizacion_porcentaje;

	/**
	 * The value for the zoologico_contacto field.
	 * @var        string
	 */
	protected $zoologico_contacto;

	/**
	 * The value for the boletin field.
	 * @var        string
	 */
	protected $boletin;

	/**
	 * The value for the programa_enriquecimiento field.
	 * @var        string
	 */
	protected $programa_enriquecimiento;

	/**
	 * The value for the programa_entrenamiento field.
	 * @var        string
	 */
	protected $programa_entrenamiento;

	/**
	 * The value for the programa_manejo_ambiental field.
	 * @var        string
	 */
	protected $programa_manejo_ambiental;

	/**
	 * The value for the programa_medicina_preventiva field.
	 * @var        string
	 */
	protected $programa_medicina_preventiva;

	/**
	 * The value for the consulta_externa_veterinaria field.
	 * @var        string
	 */
	protected $consulta_externa_veterinaria;

	/**
	 * The value for the show field.
	 * @var        string
	 */
	protected $show;

	/**
	 * The value for the documento_estrategico field.
	 * @var        string
	 */
	protected $documento_estrategico;

	/**
	 * The value for the proyecto_conservacion_insitu field.
	 * @var        string
	 */
	protected $proyecto_conservacion_insitu;

	/**
	 * The value for the proyecto_conservacion_exsitu field.
	 * @var        string
	 */
	protected $proyecto_conservacion_exsitu;

	/**
	 * The value for the profesional_intereses_principales field.
	 * @var        string
	 */
	protected $profesional_intereses_principales;

	/**
	 * The value for the profesional_area_tematica_interes field.
	 * @var        string
	 */
	protected $profesional_area_tematica_interes;

	/**
	 * The value for the profesional_area_experiencia field.
	 * @var        string
	 */
	protected $profesional_area_experiencia;

	/**
	 * The value for the profesional_proyecto field.
	 * @var        string
	 */
	protected $profesional_proyecto;

	/**
	 * The value for the profesional_publicacion field.
	 * @var        string
	 */
	protected $profesional_publicacion;

	/**
	 * The value for the asociacion_lista_instituciones field.
	 * @var        string
	 */
	protected $asociacion_lista_instituciones;

	/**
	 * The value for the asociacion_lista_asociaciones field.
	 * @var        string
	 */
	protected $asociacion_lista_asociaciones;

	/**
	 * The value for the asociacion_estatutos field.
	 * @var        string
	 */
	protected $asociacion_estatutos;

	/**
	 * The value for the asociacion_organigrama field.
	 * @var        string
	 */
	protected $asociacion_organigrama;

	/**
	 * The value for the asociacion_panorama_pais field.
	 * @var        string
	 */
	protected $asociacion_panorama_pais;

	/**
	 * The value for the asociacion_apoyo_desde_alpza field.
	 * @var        string
	 */
	protected $asociacion_apoyo_desde_alpza;

	/**
	 * The value for the asociacion_apoyo_hacia_alpza field.
	 * @var        string
	 */
	protected $asociacion_apoyo_hacia_alpza;

	/**
	 * @var        AlpzaMiembro
	 */
	protected $aAlpzaMiembro;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	// symfony behavior

	const PEER = 'AlpzaMiembroEspecificoPeer';

	/**
	 * Get the [id_alpza_miembro_especifico] column value.
	 *
	 * @return     int
	 */
	public function getIdAlpzaMiembroEspecifico()
	{
		return $this->id_alpza_miembro_especifico;
	}

	/**
	 * Get the [id_alpza_miembro] column value.
	 *
	 * @return     int
	 */
	public function getIdAlpzaMiembro()
	{
		return $this->id_alpza_miembro;
	}

	/**
	 * Get the [visitas_anuales] column value.
	 *
	 * @return     string
	 */
	public function getVisitasAnuales()
	{
		return $this->visitas_anuales;
	}

	/**
	 * Get the [propiedad] column value.
	 *
	 * @return     string
	 */
	public function getPropiedad()
	{
		return $this->propiedad;
	}

	/**
	 * Get the [propietario] column value.
	 *
	 * @return     string
	 */
	public function getPropietario()
	{
		return $this->propietario;
	}

	/**
	 * Get the [administracion] column value.
	 *
	 * @return     string
	 */
	public function getAdministracion()
	{
		return $this->administracion;
	}

	/**
	 * Get the [administrador] column value.
	 *
	 * @return     string
	 */
	public function getAdministrador()
	{
		return $this->administrador;
	}

	/**
	 * Get the [lucro] column value.
	 *
	 * @return     string
	 */
	public function getLucro()
	{
		return $this->lucro;
	}

	/**
	 * Get the [ofrece_asesoria] column value.
	 *
	 * @return     string
	 */
	public function getOfreceAsesoria()
	{
		return $this->ofrece_asesoria;
	}

	/**
	 * Get the [area_asesoria] column value.
	 *
	 * @return     string
	 */
	public function getAreaAsesoria()
	{
		return $this->area_asesoria;
	}

	/**
	 * Get the [personal_permanente] column value.
	 *
	 * @return     string
	 */
	public function getPersonalPermanente()
	{
		return $this->personal_permanente;
	}

	/**
	 * Get the [personal_temporal] column value.
	 *
	 * @return     string
	 */
	public function getPersonalTemporal()
	{
		return $this->personal_temporal;
	}

	/**
	 * Get the [horario_atencion] column value.
	 *
	 * @return     string
	 */
	public function getHorarioAtencion()
	{
		return $this->horario_atencion;
	}

	/**
	 * Get the [senalizacion] column value.
	 *
	 * @return     string
	 */
	public function getSenalizacion()
	{
		return $this->senalizacion;
	}

	/**
	 * Get the [senalizacion_porcentaje] column value.
	 *
	 * @return     string
	 */
	public function getSenalizacionPorcentaje()
	{
		return $this->senalizacion_porcentaje;
	}

	/**
	 * Get the [zoologico_contacto] column value.
	 *
	 * @return     string
	 */
	public function getZoologicoContacto()
	{
		return $this->zoologico_contacto;
	}

	/**
	 * Get the [boletin] column value.
	 *
	 * @return     string
	 */
	public function getBoletin()
	{
		return $this->boletin;
	}

	/**
	 * Get the [programa_enriquecimiento] column value.
	 *
	 * @return     string
	 */
	public function getProgramaEnriquecimiento()
	{
		return $this->programa_enriquecimiento;
	}

	/**
	 * Get the [programa_entrenamiento] column value.
	 *
	 * @return     string
	 */
	public function getProgramaEntrenamiento()
	{
		return $this->programa_entrenamiento;
	}

	/**
	 * Get the [programa_manejo_ambiental] column value.
	 *
	 * @return     string
	 */
	public function getProgramaManejoAmbiental()
	{
		return $this->programa_manejo_ambiental;
	}

	/**
	 * Get the [programa_medicina_preventiva] column value.
	 *
	 * @return     string
	 */
	public function getProgramaMedicinaPreventiva()
	{
		return $this->programa_medicina_preventiva;
	}

	/**
	 * Get the [consulta_externa_veterinaria] column value.
	 *
	 * @return     string
	 */
	public function getConsultaExternaVeterinaria()
	{
		return $this->consulta_externa_veterinaria;
	}

	/**
	 * Get the [show] column value.
	 *
	 * @return     string
	 */
	public function getShow()
	{
		return $this->show;
	}

	/**
	 * Get the [documento_estrategico] column value.
	 *
	 * @return     string
	 */
	public function getDocumentoEstrategico()
	{
		return $this->documento_estrategico;
	}

	/**
	 * Get the [proyecto_conservacion_insitu] column value.
	 *
	 * @return     string
	 */
	public function getProyectoConservacionInsitu()
	{
		return $this->proyecto_conservacion_insitu;
	}

	/**
	 * Get the [proyecto_conservacion_exsitu] column value.
	 *
	 * @return     string
	 */
	public function getProyectoConservacionExsitu()
	{
		return $this->proyecto_conservacion_exsitu;
	}

	/**
	 * Get the [profesional_intereses_principales] column value.
	 *
	 * @return     string
	 */
	public function getProfesionalInteresesPrincipales()
	{
		return $this->profesional_intereses_principales;
	}

	/**
	 * Get the [profesional_area_tematica_interes] column value.
	 *
	 * @return     string
	 */
	public function getProfesionalAreaTematicaInteres()
	{
		return $this->profesional_area_tematica_interes;
	}

	/**
	 * Get the [profesional_area_experiencia] column value.
	 *
	 * @return     string
	 */
	public function getProfesionalAreaExperiencia()
	{
		return $this->profesional_area_experiencia;
	}

	/**
	 * Get the [profesional_proyecto] column value.
	 *
	 * @return     string
	 */
	public function getProfesionalProyecto()
	{
		return $this->profesional_proyecto;
	}

	/**
	 * Get the [profesional_publicacion] column value.
	 *
	 * @return     string
	 */
	public function getProfesionalPublicacion()
	{
		return $this->profesional_publicacion;
	}

	/**
	 * Get the [asociacion_lista_instituciones] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionListaInstituciones()
	{
		return $this->asociacion_lista_instituciones;
	}

	/**
	 * Get the [asociacion_lista_asociaciones] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionListaAsociaciones()
	{
		return $this->asociacion_lista_asociaciones;
	}

	/**
	 * Get the [asociacion_estatutos] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionEstatutos()
	{
		return $this->asociacion_estatutos;
	}

	/**
	 * Get the [asociacion_organigrama] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionOrganigrama()
	{
		return $this->asociacion_organigrama;
	}

	/**
	 * Get the [asociacion_panorama_pais] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionPanoramaPais()
	{
		return $this->asociacion_panorama_pais;
	}

	/**
	 * Get the [asociacion_apoyo_desde_alpza] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionApoyoDesdeAlpza()
	{
		return $this->asociacion_apoyo_desde_alpza;
	}

	/**
	 * Get the [asociacion_apoyo_hacia_alpza] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionApoyoHaciaAlpza()
	{
		return $this->asociacion_apoyo_hacia_alpza;
	}

	/**
	 * Set the value of [id_alpza_miembro_especifico] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setIdAlpzaMiembroEspecifico($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_alpza_miembro_especifico !== $v) {
			$this->id_alpza_miembro_especifico = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO_ESPECIFICO;
		}

		return $this;
	} // setIdAlpzaMiembroEspecifico()

	/**
	 * Set the value of [id_alpza_miembro] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setIdAlpzaMiembro($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_alpza_miembro !== $v) {
			$this->id_alpza_miembro = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO;
		}

		if ($this->aAlpzaMiembro !== null && $this->aAlpzaMiembro->getIdAlpzaMiembro() !== $v) {
			$this->aAlpzaMiembro = null;
		}

		return $this;
	} // setIdAlpzaMiembro()

	/**
	 * Set the value of [visitas_anuales] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setVisitasAnuales($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->visitas_anuales !== $v) {
			$this->visitas_anuales = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::VISITAS_ANUALES;
		}

		return $this;
	} // setVisitasAnuales()

	/**
	 * Set the value of [propiedad] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setPropiedad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->propiedad !== $v) {
			$this->propiedad = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROPIEDAD;
		}

		return $this;
	} // setPropiedad()

	/**
	 * Set the value of [propietario] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setPropietario($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->propietario !== $v) {
			$this->propietario = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROPIETARIO;
		}

		return $this;
	} // setPropietario()

	/**
	 * Set the value of [administracion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAdministracion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->administracion !== $v) {
			$this->administracion = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ADMINISTRACION;
		}

		return $this;
	} // setAdministracion()

	/**
	 * Set the value of [administrador] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAdministrador($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->administrador !== $v) {
			$this->administrador = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ADMINISTRADOR;
		}

		return $this;
	} // setAdministrador()

	/**
	 * Set the value of [lucro] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setLucro($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->lucro !== $v) {
			$this->lucro = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::LUCRO;
		}

		return $this;
	} // setLucro()

	/**
	 * Set the value of [ofrece_asesoria] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setOfreceAsesoria($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ofrece_asesoria !== $v) {
			$this->ofrece_asesoria = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::OFRECE_ASESORIA;
		}

		return $this;
	} // setOfreceAsesoria()

	/**
	 * Set the value of [area_asesoria] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAreaAsesoria($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->area_asesoria !== $v) {
			$this->area_asesoria = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::AREA_ASESORIA;
		}

		return $this;
	} // setAreaAsesoria()

	/**
	 * Set the value of [personal_permanente] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setPersonalPermanente($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->personal_permanente !== $v) {
			$this->personal_permanente = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PERSONAL_PERMANENTE;
		}

		return $this;
	} // setPersonalPermanente()

	/**
	 * Set the value of [personal_temporal] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setPersonalTemporal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->personal_temporal !== $v) {
			$this->personal_temporal = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PERSONAL_TEMPORAL;
		}

		return $this;
	} // setPersonalTemporal()

	/**
	 * Set the value of [horario_atencion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setHorarioAtencion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->horario_atencion !== $v) {
			$this->horario_atencion = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::HORARIO_ATENCION;
		}

		return $this;
	} // setHorarioAtencion()

	/**
	 * Set the value of [senalizacion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setSenalizacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->senalizacion !== $v) {
			$this->senalizacion = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::SENALIZACION;
		}

		return $this;
	} // setSenalizacion()

	/**
	 * Set the value of [senalizacion_porcentaje] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setSenalizacionPorcentaje($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->senalizacion_porcentaje !== $v) {
			$this->senalizacion_porcentaje = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::SENALIZACION_PORCENTAJE;
		}

		return $this;
	} // setSenalizacionPorcentaje()

	/**
	 * Set the value of [zoologico_contacto] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setZoologicoContacto($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->zoologico_contacto !== $v) {
			$this->zoologico_contacto = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ZOOLOGICO_CONTACTO;
		}

		return $this;
	} // setZoologicoContacto()

	/**
	 * Set the value of [boletin] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setBoletin($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->boletin !== $v) {
			$this->boletin = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::BOLETIN;
		}

		return $this;
	} // setBoletin()

	/**
	 * Set the value of [programa_enriquecimiento] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProgramaEnriquecimiento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_enriquecimiento !== $v) {
			$this->programa_enriquecimiento = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROGRAMA_ENRIQUECIMIENTO;
		}

		return $this;
	} // setProgramaEnriquecimiento()

	/**
	 * Set the value of [programa_entrenamiento] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProgramaEntrenamiento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_entrenamiento !== $v) {
			$this->programa_entrenamiento = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROGRAMA_ENTRENAMIENTO;
		}

		return $this;
	} // setProgramaEntrenamiento()

	/**
	 * Set the value of [programa_manejo_ambiental] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProgramaManejoAmbiental($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_manejo_ambiental !== $v) {
			$this->programa_manejo_ambiental = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROGRAMA_MANEJO_AMBIENTAL;
		}

		return $this;
	} // setProgramaManejoAmbiental()

	/**
	 * Set the value of [programa_medicina_preventiva] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProgramaMedicinaPreventiva($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_medicina_preventiva !== $v) {
			$this->programa_medicina_preventiva = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROGRAMA_MEDICINA_PREVENTIVA;
		}

		return $this;
	} // setProgramaMedicinaPreventiva()

	/**
	 * Set the value of [consulta_externa_veterinaria] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setConsultaExternaVeterinaria($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->consulta_externa_veterinaria !== $v) {
			$this->consulta_externa_veterinaria = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::CONSULTA_EXTERNA_VETERINARIA;
		}

		return $this;
	} // setConsultaExternaVeterinaria()

	/**
	 * Set the value of [show] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setShow($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->show !== $v) {
			$this->show = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::SHOW;
		}

		return $this;
	} // setShow()

	/**
	 * Set the value of [documento_estrategico] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setDocumentoEstrategico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->documento_estrategico !== $v) {
			$this->documento_estrategico = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::DOCUMENTO_ESTRATEGICO;
		}

		return $this;
	} // setDocumentoEstrategico()

	/**
	 * Set the value of [proyecto_conservacion_insitu] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProyectoConservacionInsitu($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->proyecto_conservacion_insitu !== $v) {
			$this->proyecto_conservacion_insitu = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROYECTO_CONSERVACION_INSITU;
		}

		return $this;
	} // setProyectoConservacionInsitu()

	/**
	 * Set the value of [proyecto_conservacion_exsitu] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProyectoConservacionExsitu($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->proyecto_conservacion_exsitu !== $v) {
			$this->proyecto_conservacion_exsitu = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROYECTO_CONSERVACION_EXSITU;
		}

		return $this;
	} // setProyectoConservacionExsitu()

	/**
	 * Set the value of [profesional_intereses_principales] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProfesionalInteresesPrincipales($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->profesional_intereses_principales !== $v) {
			$this->profesional_intereses_principales = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROFESIONAL_INTERESES_PRINCIPALES;
		}

		return $this;
	} // setProfesionalInteresesPrincipales()

	/**
	 * Set the value of [profesional_area_tematica_interes] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProfesionalAreaTematicaInteres($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->profesional_area_tematica_interes !== $v) {
			$this->profesional_area_tematica_interes = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROFESIONAL_AREA_TEMATICA_INTERES;
		}

		return $this;
	} // setProfesionalAreaTematicaInteres()

	/**
	 * Set the value of [profesional_area_experiencia] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProfesionalAreaExperiencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->profesional_area_experiencia !== $v) {
			$this->profesional_area_experiencia = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROFESIONAL_AREA_EXPERIENCIA;
		}

		return $this;
	} // setProfesionalAreaExperiencia()

	/**
	 * Set the value of [profesional_proyecto] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProfesionalProyecto($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->profesional_proyecto !== $v) {
			$this->profesional_proyecto = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROFESIONAL_PROYECTO;
		}

		return $this;
	} // setProfesionalProyecto()

	/**
	 * Set the value of [profesional_publicacion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setProfesionalPublicacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->profesional_publicacion !== $v) {
			$this->profesional_publicacion = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::PROFESIONAL_PUBLICACION;
		}

		return $this;
	} // setProfesionalPublicacion()

	/**
	 * Set the value of [asociacion_lista_instituciones] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionListaInstituciones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_lista_instituciones !== $v) {
			$this->asociacion_lista_instituciones = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_LISTA_INSTITUCIONES;
		}

		return $this;
	} // setAsociacionListaInstituciones()

	/**
	 * Set the value of [asociacion_lista_asociaciones] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionListaAsociaciones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_lista_asociaciones !== $v) {
			$this->asociacion_lista_asociaciones = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_LISTA_ASOCIACIONES;
		}

		return $this;
	} // setAsociacionListaAsociaciones()

	/**
	 * Set the value of [asociacion_estatutos] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionEstatutos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_estatutos !== $v) {
			$this->asociacion_estatutos = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_ESTATUTOS;
		}

		return $this;
	} // setAsociacionEstatutos()

	/**
	 * Set the value of [asociacion_organigrama] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionOrganigrama($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_organigrama !== $v) {
			$this->asociacion_organigrama = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_ORGANIGRAMA;
		}

		return $this;
	} // setAsociacionOrganigrama()

	/**
	 * Set the value of [asociacion_panorama_pais] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionPanoramaPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_panorama_pais !== $v) {
			$this->asociacion_panorama_pais = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_PANORAMA_PAIS;
		}

		return $this;
	} // setAsociacionPanoramaPais()

	/**
	 * Set the value of [asociacion_apoyo_desde_alpza] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionApoyoDesdeAlpza($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_apoyo_desde_alpza !== $v) {
			$this->asociacion_apoyo_desde_alpza = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_APOYO_DESDE_ALPZA;
		}

		return $this;
	} // setAsociacionApoyoDesdeAlpza()

	/**
	 * Set the value of [asociacion_apoyo_hacia_alpza] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 */
	public function setAsociacionApoyoHaciaAlpza($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_apoyo_hacia_alpza !== $v) {
			$this->asociacion_apoyo_hacia_alpza = $v;
			$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ASOCIACION_APOYO_HACIA_ALPZA;
		}

		return $this;
	} // setAsociacionApoyoHaciaAlpza()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->id_alpza_miembro_especifico = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->id_alpza_miembro = ($row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			$this->visitas_anuales = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->propiedad = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->propietario = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->administracion = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->administrador = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->lucro = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->ofrece_asesoria = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->area_asesoria = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->personal_permanente = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->personal_temporal = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->horario_atencion = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->senalizacion = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->senalizacion_porcentaje = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->zoologico_contacto = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->boletin = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->programa_enriquecimiento = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->programa_entrenamiento = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->programa_manejo_ambiental = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->programa_medicina_preventiva = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->consulta_externa_veterinaria = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->show = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->documento_estrategico = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->proyecto_conservacion_insitu = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->proyecto_conservacion_exsitu = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->profesional_intereses_principales = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->profesional_area_tematica_interes = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->profesional_area_experiencia = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->profesional_proyecto = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->profesional_publicacion = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->asociacion_lista_instituciones = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->asociacion_lista_asociaciones = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->asociacion_estatutos = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->asociacion_organigrama = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->asociacion_panorama_pais = ($row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->asociacion_apoyo_desde_alpza = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->asociacion_apoyo_hacia_alpza = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 38; // 38 = AlpzaMiembroEspecificoPeer::NUM_COLUMNS - AlpzaMiembroEspecificoPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating AlpzaMiembroEspecifico object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

		if ($this->aAlpzaMiembro !== null && $this->id_alpza_miembro !== $this->aAlpzaMiembro->getIdAlpzaMiembro()) {
			$this->aAlpzaMiembro = null;
		}
	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AlpzaMiembroEspecificoPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = AlpzaMiembroEspecificoPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

			$this->aAlpzaMiembro = null;
		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AlpzaMiembroEspecificoPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}

		$con->beginTransaction();
		try {
			$ret = $this->preDelete($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseAlpzaMiembroEspecifico:delete:pre') as $callable)
			{
				if (call_user_func($callable, $this, $con))
				{
					$con->commit();
						
					return;
				}
			}

			if ($ret) {
				AlpzaMiembroEspecificoPeer::doDelete($this, $con);
				$this->postDelete($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseAlpzaMiembroEspecifico:delete:post') as $callable)
				{
					call_user_func($callable, $this, $con);
				}

				$this->setDeleted(true);
				$con->commit();
			} else {
				$con->commit();
			}
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AlpzaMiembroEspecificoPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}

		$con->beginTransaction();
		$isInsert = $this->isNew();
		try {
			$ret = $this->preSave($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseAlpzaMiembroEspecifico:save:pre') as $callable)
			{
				if (is_integer($affectedRows = call_user_func($callable, $this, $con)))
				{
					$con->commit();
						
					return $affectedRows;
				}
			}

			if ($isInsert) {
				$ret = $ret && $this->preInsert($con);
			} else {
				$ret = $ret && $this->preUpdate($con);
			}
			if ($ret) {
				$affectedRows = $this->doSave($con);
				if ($isInsert) {
					$this->postInsert($con);
				} else {
					$this->postUpdate($con);
				}
				$this->postSave($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseAlpzaMiembroEspecifico:save:post') as $callable)
				{
					call_user_func($callable, $this, $con, $affectedRows);
				}

				AlpzaMiembroEspecificoPeer::addInstanceToPool($this);
			} else {
				$affectedRows = 0;
			}
			$con->commit();
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			// We call the save method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aAlpzaMiembro !== null) {
				if ($this->aAlpzaMiembro->isModified() || $this->aAlpzaMiembro->isNew()) {
					$affectedRows += $this->aAlpzaMiembro->save($con);
				}
				$this->setAlpzaMiembro($this->aAlpzaMiembro);
			}

			if ($this->isNew() ) {
				$this->modifiedColumns[] = AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO_ESPECIFICO;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = AlpzaMiembroEspecificoPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
					// should always be true here (even though technically
					// BasePeer::doInsert() can insert multiple rows).

					$this->setIdAlpzaMiembroEspecifico($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += AlpzaMiembroEspecificoPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			// We call the validate method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aAlpzaMiembro !== null) {
				if (!$this->aAlpzaMiembro->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aAlpzaMiembro->getValidationFailures());
				}
			}


			if (($retval = AlpzaMiembroEspecificoPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = AlpzaMiembroEspecificoPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getIdAlpzaMiembroEspecifico();
				break;
			case 1:
				return $this->getIdAlpzaMiembro();
				break;
			case 2:
				return $this->getVisitasAnuales();
				break;
			case 3:
				return $this->getPropiedad();
				break;
			case 4:
				return $this->getPropietario();
				break;
			case 5:
				return $this->getAdministracion();
				break;
			case 6:
				return $this->getAdministrador();
				break;
			case 7:
				return $this->getLucro();
				break;
			case 8:
				return $this->getOfreceAsesoria();
				break;
			case 9:
				return $this->getAreaAsesoria();
				break;
			case 10:
				return $this->getPersonalPermanente();
				break;
			case 11:
				return $this->getPersonalTemporal();
				break;
			case 12:
				return $this->getHorarioAtencion();
				break;
			case 13:
				return $this->getSenalizacion();
				break;
			case 14:
				return $this->getSenalizacionPorcentaje();
				break;
			case 15:
				return $this->getZoologicoContacto();
				break;
			case 16:
				return $this->getBoletin();
				break;
			case 17:
				return $this->getProgramaEnriquecimiento();
				break;
			case 18:
				return $this->getProgramaEntrenamiento();
				break;
			case 19:
				return $this->getProgramaManejoAmbiental();
				break;
			case 20:
				return $this->getProgramaMedicinaPreventiva();
				break;
			case 21:
				return $this->getConsultaExternaVeterinaria();
				break;
			case 22:
				return $this->getShow();
				break;
			case 23:
				return $this->getDocumentoEstrategico();
				break;
			case 24:
				return $this->getProyectoConservacionInsitu();
				break;
			case 25:
				return $this->getProyectoConservacionExsitu();
				break;
			case 26:
				return $this->getProfesionalInteresesPrincipales();
				break;
			case 27:
				return $this->getProfesionalAreaTematicaInteres();
				break;
			case 28:
				return $this->getProfesionalAreaExperiencia();
				break;
			case 29:
				return $this->getProfesionalProyecto();
				break;
			case 30:
				return $this->getProfesionalPublicacion();
				break;
			case 31:
				return $this->getAsociacionListaInstituciones();
				break;
			case 32:
				return $this->getAsociacionListaAsociaciones();
				break;
			case 33:
				return $this->getAsociacionEstatutos();
				break;
			case 34:
				return $this->getAsociacionOrganigrama();
				break;
			case 35:
				return $this->getAsociacionPanoramaPais();
				break;
			case 36:
				return $this->getAsociacionApoyoDesdeAlpza();
				break;
			case 37:
				return $this->getAsociacionApoyoHaciaAlpza();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = AlpzaMiembroEspecificoPeer::getFieldNames($keyType);
		$result = array(
		$keys[0] => $this->getIdAlpzaMiembroEspecifico(),
		$keys[1] => $this->getIdAlpzaMiembro(),
		$keys[2] => $this->getVisitasAnuales(),
		$keys[3] => $this->getPropiedad(),
		$keys[4] => $this->getPropietario(),
		$keys[5] => $this->getAdministracion(),
		$keys[6] => $this->getAdministrador(),
		$keys[7] => $this->getLucro(),
		$keys[8] => $this->getOfreceAsesoria(),
		$keys[9] => $this->getAreaAsesoria(),
		$keys[10] => $this->getPersonalPermanente(),
		$keys[11] => $this->getPersonalTemporal(),
		$keys[12] => $this->getHorarioAtencion(),
		$keys[13] => $this->getSenalizacion(),
		$keys[14] => $this->getSenalizacionPorcentaje(),
		$keys[15] => $this->getZoologicoContacto(),
		$keys[16] => $this->getBoletin(),
		$keys[17] => $this->getProgramaEnriquecimiento(),
		$keys[18] => $this->getProgramaEntrenamiento(),
		$keys[19] => $this->getProgramaManejoAmbiental(),
		$keys[20] => $this->getProgramaMedicinaPreventiva(),
		$keys[21] => $this->getConsultaExternaVeterinaria(),
		$keys[22] => $this->getShow(),
		$keys[23] => $this->getDocumentoEstrategico(),
		$keys[24] => $this->getProyectoConservacionInsitu(),
		$keys[25] => $this->getProyectoConservacionExsitu(),
		$keys[26] => $this->getProfesionalInteresesPrincipales(),
		$keys[27] => $this->getProfesionalAreaTematicaInteres(),
		$keys[28] => $this->getProfesionalAreaExperiencia(),
		$keys[29] => $this->getProfesionalProyecto(),
		$keys[30] => $this->getProfesionalPublicacion(),
		$keys[31] => $this->getAsociacionListaInstituciones(),
		$keys[32] => $this->getAsociacionListaAsociaciones(),
		$keys[33] => $this->getAsociacionEstatutos(),
		$keys[34] => $this->getAsociacionOrganigrama(),
		$keys[35] => $this->getAsociacionPanoramaPais(),
		$keys[36] => $this->getAsociacionApoyoDesdeAlpza(),
		$keys[37] => $this->getAsociacionApoyoHaciaAlpza(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = AlpzaMiembroEspecificoPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setIdAlpzaMiembroEspecifico($value);
				break;
			case 1:
				$this->setIdAlpzaMiembro($value);
				break;
			case 2:
				$this->setVisitasAnuales($value);
				break;
			case 3:
				$this->setPropiedad($value);
				break;
			case 4:
				$this->setPropietario($value);
				break;
			case 5:
				$this->setAdministracion($value);
				break;
			case 6:
				$this->setAdministrador($value);
				break;
			case 7:
				$this->setLucro($value);
				break;
			case 8:
				$this->setOfreceAsesoria($value);
				break;
			case 9:
				$this->setAreaAsesoria($value);
				break;
			case 10:
				$this->setPersonalPermanente($value);
				break;
			case 11:
				$this->setPersonalTemporal($value);
				break;
			case 12:
				$this->setHorarioAtencion($value);
				break;
			case 13:
				$this->setSenalizacion($value);
				break;
			case 14:
				$this->setSenalizacionPorcentaje($value);
				break;
			case 15:
				$this->setZoologicoContacto($value);
				break;
			case 16:
				$this->setBoletin($value);
				break;
			case 17:
				$this->setProgramaEnriquecimiento($value);
				break;
			case 18:
				$this->setProgramaEntrenamiento($value);
				break;
			case 19:
				$this->setProgramaManejoAmbiental($value);
				break;
			case 20:
				$this->setProgramaMedicinaPreventiva($value);
				break;
			case 21:
				$this->setConsultaExternaVeterinaria($value);
				break;
			case 22:
				$this->setShow($value);
				break;
			case 23:
				$this->setDocumentoEstrategico($value);
				break;
			case 24:
				$this->setProyectoConservacionInsitu($value);
				break;
			case 25:
				$this->setProyectoConservacionExsitu($value);
				break;
			case 26:
				$this->setProfesionalInteresesPrincipales($value);
				break;
			case 27:
				$this->setProfesionalAreaTematicaInteres($value);
				break;
			case 28:
				$this->setProfesionalAreaExperiencia($value);
				break;
			case 29:
				$this->setProfesionalProyecto($value);
				break;
			case 30:
				$this->setProfesionalPublicacion($value);
				break;
			case 31:
				$this->setAsociacionListaInstituciones($value);
				break;
			case 32:
				$this->setAsociacionListaAsociaciones($value);
				break;
			case 33:
				$this->setAsociacionEstatutos($value);
				break;
			case 34:
				$this->setAsociacionOrganigrama($value);
				break;
			case 35:
				$this->setAsociacionPanoramaPais($value);
				break;
			case 36:
				$this->setAsociacionApoyoDesdeAlpza($value);
				break;
			case 37:
				$this->setAsociacionApoyoHaciaAlpza($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = AlpzaMiembroEspecificoPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setIdAlpzaMiembroEspecifico($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setIdAlpzaMiembro($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setVisitasAnuales($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setPropiedad($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setPropietario($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setAdministracion($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setAdministrador($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setLucro($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setOfreceAsesoria($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setAreaAsesoria($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setPersonalPermanente($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setPersonalTemporal($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setHorarioAtencion($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setSenalizacion($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setSenalizacionPorcentaje($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setZoologicoContacto($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setBoletin($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setProgramaEnriquecimiento($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setProgramaEntrenamiento($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setProgramaManejoAmbiental($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setProgramaMedicinaPreventiva($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setConsultaExternaVeterinaria($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setShow($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setDocumentoEstrategico($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setProyectoConservacionInsitu($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setProyectoConservacionExsitu($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setProfesionalInteresesPrincipales($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setProfesionalAreaTematicaInteres($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setProfesionalAreaExperiencia($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setProfesionalProyecto($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setProfesionalPublicacion($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setAsociacionListaInstituciones($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setAsociacionListaAsociaciones($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setAsociacionEstatutos($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setAsociacionOrganigrama($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setAsociacionPanoramaPais($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setAsociacionApoyoDesdeAlpza($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setAsociacionApoyoHaciaAlpza($arr[$keys[37]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(AlpzaMiembroEspecificoPeer::DATABASE_NAME);

		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO_ESPECIFICO)) $criteria->add(AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO_ESPECIFICO, $this->id_alpza_miembro_especifico);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO)) $criteria->add(AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO, $this->id_alpza_miembro);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::VISITAS_ANUALES)) $criteria->add(AlpzaMiembroEspecificoPeer::VISITAS_ANUALES, $this->visitas_anuales);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROPIEDAD)) $criteria->add(AlpzaMiembroEspecificoPeer::PROPIEDAD, $this->propiedad);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROPIETARIO)) $criteria->add(AlpzaMiembroEspecificoPeer::PROPIETARIO, $this->propietario);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ADMINISTRACION)) $criteria->add(AlpzaMiembroEspecificoPeer::ADMINISTRACION, $this->administracion);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ADMINISTRADOR)) $criteria->add(AlpzaMiembroEspecificoPeer::ADMINISTRADOR, $this->administrador);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::LUCRO)) $criteria->add(AlpzaMiembroEspecificoPeer::LUCRO, $this->lucro);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::OFRECE_ASESORIA)) $criteria->add(AlpzaMiembroEspecificoPeer::OFRECE_ASESORIA, $this->ofrece_asesoria);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::AREA_ASESORIA)) $criteria->add(AlpzaMiembroEspecificoPeer::AREA_ASESORIA, $this->area_asesoria);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PERSONAL_PERMANENTE)) $criteria->add(AlpzaMiembroEspecificoPeer::PERSONAL_PERMANENTE, $this->personal_permanente);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PERSONAL_TEMPORAL)) $criteria->add(AlpzaMiembroEspecificoPeer::PERSONAL_TEMPORAL, $this->personal_temporal);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::HORARIO_ATENCION)) $criteria->add(AlpzaMiembroEspecificoPeer::HORARIO_ATENCION, $this->horario_atencion);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::SENALIZACION)) $criteria->add(AlpzaMiembroEspecificoPeer::SENALIZACION, $this->senalizacion);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::SENALIZACION_PORCENTAJE)) $criteria->add(AlpzaMiembroEspecificoPeer::SENALIZACION_PORCENTAJE, $this->senalizacion_porcentaje);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ZOOLOGICO_CONTACTO)) $criteria->add(AlpzaMiembroEspecificoPeer::ZOOLOGICO_CONTACTO, $this->zoologico_contacto);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::BOLETIN)) $criteria->add(AlpzaMiembroEspecificoPeer::BOLETIN, $this->boletin);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROGRAMA_ENRIQUECIMIENTO)) $criteria->add(AlpzaMiembroEspecificoPeer::PROGRAMA_ENRIQUECIMIENTO, $this->programa_enriquecimiento);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROGRAMA_ENTRENAMIENTO)) $criteria->add(AlpzaMiembroEspecificoPeer::PROGRAMA_ENTRENAMIENTO, $this->programa_entrenamiento);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROGRAMA_MANEJO_AMBIENTAL)) $criteria->add(AlpzaMiembroEspecificoPeer::PROGRAMA_MANEJO_AMBIENTAL, $this->programa_manejo_ambiental);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROGRAMA_MEDICINA_PREVENTIVA)) $criteria->add(AlpzaMiembroEspecificoPeer::PROGRAMA_MEDICINA_PREVENTIVA, $this->programa_medicina_preventiva);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::CONSULTA_EXTERNA_VETERINARIA)) $criteria->add(AlpzaMiembroEspecificoPeer::CONSULTA_EXTERNA_VETERINARIA, $this->consulta_externa_veterinaria);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::SHOW)) $criteria->add(AlpzaMiembroEspecificoPeer::SHOW, $this->show);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::DOCUMENTO_ESTRATEGICO)) $criteria->add(AlpzaMiembroEspecificoPeer::DOCUMENTO_ESTRATEGICO, $this->documento_estrategico);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROYECTO_CONSERVACION_INSITU)) $criteria->add(AlpzaMiembroEspecificoPeer::PROYECTO_CONSERVACION_INSITU, $this->proyecto_conservacion_insitu);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROYECTO_CONSERVACION_EXSITU)) $criteria->add(AlpzaMiembroEspecificoPeer::PROYECTO_CONSERVACION_EXSITU, $this->proyecto_conservacion_exsitu);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROFESIONAL_INTERESES_PRINCIPALES)) $criteria->add(AlpzaMiembroEspecificoPeer::PROFESIONAL_INTERESES_PRINCIPALES, $this->profesional_intereses_principales);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROFESIONAL_AREA_TEMATICA_INTERES)) $criteria->add(AlpzaMiembroEspecificoPeer::PROFESIONAL_AREA_TEMATICA_INTERES, $this->profesional_area_tematica_interes);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROFESIONAL_AREA_EXPERIENCIA)) $criteria->add(AlpzaMiembroEspecificoPeer::PROFESIONAL_AREA_EXPERIENCIA, $this->profesional_area_experiencia);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROFESIONAL_PROYECTO)) $criteria->add(AlpzaMiembroEspecificoPeer::PROFESIONAL_PROYECTO, $this->profesional_proyecto);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::PROFESIONAL_PUBLICACION)) $criteria->add(AlpzaMiembroEspecificoPeer::PROFESIONAL_PUBLICACION, $this->profesional_publicacion);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_LISTA_INSTITUCIONES)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_LISTA_INSTITUCIONES, $this->asociacion_lista_instituciones);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_LISTA_ASOCIACIONES)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_LISTA_ASOCIACIONES, $this->asociacion_lista_asociaciones);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_ESTATUTOS)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_ESTATUTOS, $this->asociacion_estatutos);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_ORGANIGRAMA)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_ORGANIGRAMA, $this->asociacion_organigrama);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_PANORAMA_PAIS)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_PANORAMA_PAIS, $this->asociacion_panorama_pais);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_APOYO_DESDE_ALPZA)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_APOYO_DESDE_ALPZA, $this->asociacion_apoyo_desde_alpza);
		if ($this->isColumnModified(AlpzaMiembroEspecificoPeer::ASOCIACION_APOYO_HACIA_ALPZA)) $criteria->add(AlpzaMiembroEspecificoPeer::ASOCIACION_APOYO_HACIA_ALPZA, $this->asociacion_apoyo_hacia_alpza);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(AlpzaMiembroEspecificoPeer::DATABASE_NAME);

		$criteria->add(AlpzaMiembroEspecificoPeer::ID_ALPZA_MIEMBRO_ESPECIFICO, $this->id_alpza_miembro_especifico);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getIdAlpzaMiembroEspecifico();
	}

	/**
	 * Generic method to set the primary key (id_alpza_miembro_especifico column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setIdAlpzaMiembroEspecifico($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of AlpzaMiembroEspecifico (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setIdAlpzaMiembro($this->id_alpza_miembro);

		$copyObj->setVisitasAnuales($this->visitas_anuales);

		$copyObj->setPropiedad($this->propiedad);

		$copyObj->setPropietario($this->propietario);

		$copyObj->setAdministracion($this->administracion);

		$copyObj->setAdministrador($this->administrador);

		$copyObj->setLucro($this->lucro);

		$copyObj->setOfreceAsesoria($this->ofrece_asesoria);

		$copyObj->setAreaAsesoria($this->area_asesoria);

		$copyObj->setPersonalPermanente($this->personal_permanente);

		$copyObj->setPersonalTemporal($this->personal_temporal);

		$copyObj->setHorarioAtencion($this->horario_atencion);

		$copyObj->setSenalizacion($this->senalizacion);

		$copyObj->setSenalizacionPorcentaje($this->senalizacion_porcentaje);

		$copyObj->setZoologicoContacto($this->zoologico_contacto);

		$copyObj->setBoletin($this->boletin);

		$copyObj->setProgramaEnriquecimiento($this->programa_enriquecimiento);

		$copyObj->setProgramaEntrenamiento($this->programa_entrenamiento);

		$copyObj->setProgramaManejoAmbiental($this->programa_manejo_ambiental);

		$copyObj->setProgramaMedicinaPreventiva($this->programa_medicina_preventiva);

		$copyObj->setConsultaExternaVeterinaria($this->consulta_externa_veterinaria);

		$copyObj->setShow($this->show);

		$copyObj->setDocumentoEstrategico($this->documento_estrategico);

		$copyObj->setProyectoConservacionInsitu($this->proyecto_conservacion_insitu);

		$copyObj->setProyectoConservacionExsitu($this->proyecto_conservacion_exsitu);

		$copyObj->setProfesionalInteresesPrincipales($this->profesional_intereses_principales);

		$copyObj->setProfesionalAreaTematicaInteres($this->profesional_area_tematica_interes);

		$copyObj->setProfesionalAreaExperiencia($this->profesional_area_experiencia);

		$copyObj->setProfesionalProyecto($this->profesional_proyecto);

		$copyObj->setProfesionalPublicacion($this->profesional_publicacion);

		$copyObj->setAsociacionListaInstituciones($this->asociacion_lista_instituciones);

		$copyObj->setAsociacionListaAsociaciones($this->asociacion_lista_asociaciones);

		$copyObj->setAsociacionEstatutos($this->asociacion_estatutos);

		$copyObj->setAsociacionOrganigrama($this->asociacion_organigrama);

		$copyObj->setAsociacionPanoramaPais($this->asociacion_panorama_pais);

		$copyObj->setAsociacionApoyoDesdeAlpza($this->asociacion_apoyo_desde_alpza);

		$copyObj->setAsociacionApoyoHaciaAlpza($this->asociacion_apoyo_hacia_alpza);


		$copyObj->setNew(true);

		$copyObj->setIdAlpzaMiembroEspecifico(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     AlpzaMiembroEspecifico Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     AlpzaMiembroEspecificoPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new AlpzaMiembroEspecificoPeer();
		}
		return self::$peer;
	}

	/**
	 * Declares an association between this object and a AlpzaMiembro object.
	 *
	 * @param      AlpzaMiembro $v
	 * @return     AlpzaMiembroEspecifico The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setAlpzaMiembro(AlpzaMiembro $v = null)
	{
		if ($v === null) {
			$this->setIdAlpzaMiembro(NULL);
		} else {
			$this->setIdAlpzaMiembro($v->getIdAlpzaMiembro());
		}

		$this->aAlpzaMiembro = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the AlpzaMiembro object, it will not be re-added.
		if ($v !== null) {
			$v->addAlpzaMiembroEspecifico($this);
		}

		return $this;
	}


	/**
	 * Get the associated AlpzaMiembro object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     AlpzaMiembro The associated AlpzaMiembro object.
	 * @throws     PropelException
	 */
	public function getAlpzaMiembro(PropelPDO $con = null)
	{
		if ($this->aAlpzaMiembro === null && ($this->id_alpza_miembro !== null)) {
			$this->aAlpzaMiembro = AlpzaMiembroPeer::retrieveByPk($this->id_alpza_miembro);
			/* The following can be used additionally to
			 guarantee the related object contains a reference
			 to this object.  This level of coupling may, however, be
			 undesirable since it could result in an only partially populated collection
			 in the referenced object.
			 $this->aAlpzaMiembro->addAlpzaMiembroEspecificos($this);
			 */
		}
		return $this->aAlpzaMiembro;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

		$this->aAlpzaMiembro = null;
	}

	// symfony_behaviors behavior

	/**
	 * Calls methods defined via {@link sfMixer}.
	 */
	public function __call($method, $arguments)
	{
		if (!$callable = sfMixer::getCallable('BaseAlpzaMiembroEspecifico:'.$method))
		{
			throw new sfException(sprintf('Call to undefined method BaseAlpzaMiembroEspecifico::%s', $method));
		}

		array_unshift($arguments, $this);

		return call_user_func_array($callable, $arguments);
	}

} // BaseAlpzaMiembroEspecifico
