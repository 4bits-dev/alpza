<?php

/**
 * Base class that represents a row from the 'alpza_miembro_asociados' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Nov 24 15:15:37 2012
 *
 * @package    lib.model.om
 */
abstract class BaseAlpzaMiembroAsociados extends BaseObject  implements Persistent {


	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        AlpzaMiembroAsociadosPeer
	 */
	protected static $peer;

	/**
	 * The value for the id_alpza_miembro_asociados field.
	 * @var        int
	 */
	protected $id_alpza_miembro_asociados;

	/**
	 * The value for the alpza_miembro_id_alpza_miembro field.
	 * @var        int
	 */
	protected $alpza_miembro_id_alpza_miembro;

	/**
	 * The value for the nombre_formal field.
	 * @var        string
	 */
	protected $nombre_formal;

	/**
	 * The value for the sigla field.
	 * @var        string
	 */
	protected $sigla;

	/**
	 * The value for the tipo_institucion field.
	 * @var        string
	 */
	protected $tipo_institucion;

	/**
	 * The value for the numero_identificacion field.
	 * @var        string
	 */
	protected $numero_identificacion;

	/**
	 * The value for the ano_fundacion field.
	 * @var        string
	 */
	protected $ano_fundacion;

	/**
	 * The value for the ano_ingreso_alpza field.
	 * @var        string
	 */
	protected $ano_ingreso_alpza;

	/**
	 * The value for the director_nombre field.
	 * @var        string
	 */
	protected $director_nombre;

	/**
	 * The value for the director_email field.
	 * @var        string
	 */
	protected $director_email;

	/**
	 * The value for the delegado_nombre field.
	 * @var        string
	 */
	protected $delegado_nombre;

	/**
	 * The value for the delegado_apellido field.
	 * @var        string
	 */
	protected $delegado_apellido;

	/**
	 * The value for the delegado_cargo field.
	 * @var        string
	 */
	protected $delegado_cargo;

	/**
	 * The value for the delegado_profesion field.
	 * @var        string
	 */
	protected $delegado_profesion;

	/**
	 * The value for the delegado_email field.
	 * @var        string
	 */
	protected $delegado_email;

	/**
	 * The value for the logo field.
	 * @var        string
	 */
	protected $logo;

	/**
	 * The value for the direccion field.
	 * @var        string
	 */
	protected $direccion;

	/**
	 * The value for the codigo_postal field.
	 * @var        string
	 */
	protected $codigo_postal;

	/**
	 * The value for the pais field.
	 * @var        string
	 */
	protected $pais;

	/**
	 * The value for the telefono_cod_ciudad field.
	 * @var        string
	 */
	protected $telefono_cod_ciudad;

	/**
	 * The value for the telefono_cod_pais field.
	 * @var        string
	 */
	protected $telefono_cod_pais;

	/**
	 * The value for the telefono field.
	 * @var        string
	 */
	protected $telefono;

	/**
	 * The value for the celular field.
	 * @var        string
	 */
	protected $celular;

	/**
	 * The value for the email field.
	 * @var        string
	 */
	protected $email;

	/**
	 * The value for the fax field.
	 * @var        string
	 */
	protected $fax;

	/**
	 * The value for the sitio_web field.
	 * @var        string
	 */
	protected $sitio_web;

	/**
	 * The value for the descripcion field.
	 * @var        string
	 */
	protected $descripcion;

	/**
	 * The value for the mision field.
	 * @var        string
	 */
	protected $mision;

	/**
	 * The value for the vision field.
	 * @var        string
	 */
	protected $vision;

	/**
	 * The value for the objetivos field.
	 * @var        string
	 */
	protected $objetivos;

	/**
	 * The value for the acreditacion_aza field.
	 * @var        int
	 */
	protected $acreditacion_aza;

	/**
	 * The value for the acreditacion_iso14001 field.
	 * @var        int
	 */
	protected $acreditacion_iso14001;

	/**
	 * The value for the acreditacion_iso9001 field.
	 * @var        int
	 */
	protected $acreditacion_iso9001;

	/**
	 * The value for the acreditacion_otra field.
	 * @var        int
	 */
	protected $acreditacion_otra;

	/**
	 * The value for the asociacion_waza field.
	 * @var        int
	 */
	protected $asociacion_waza;

	/**
	 * The value for the asociacion_aza field.
	 * @var        int
	 */
	protected $asociacion_aza;

	/**
	 * The value for the asociacion_eaza field.
	 * @var        int
	 */
	protected $asociacion_eaza;

	/**
	 * The value for the asociacion_ize field.
	 * @var        int
	 */
	protected $asociacion_ize;

	/**
	 * The value for the asociacion_amaczoa field.
	 * @var        int
	 */
	protected $asociacion_amaczoa;

	/**
	 * The value for the asociacion_isis field.
	 * @var        int
	 */
	protected $asociacion_isis;

	/**
	 * The value for the asociacion_otra field.
	 * @var        int
	 */
	protected $asociacion_otra;

	/**
	 * The value for the marca_anillo field.
	 * @var        int
	 */
	protected $marca_anillo;

	/**
	 * The value for the marca_banda field.
	 * @var        int
	 */
	protected $marca_banda;

	/**
	 * The value for the marca_caliente field.
	 * @var        int
	 */
	protected $marca_caliente;

	/**
	 * The value for the marca_fria field.
	 * @var        int
	 */
	protected $marca_fria;

	/**
	 * The value for the marca_microchip field.
	 * @var        int
	 */
	protected $marca_microchip;

	/**
	 * The value for the marca_natura field.
	 * @var        int
	 */
	protected $marca_natura;

	/**
	 * The value for the marca_piquete field.
	 * @var        int
	 */
	protected $marca_piquete;

	/**
	 * The value for the marca_raya field.
	 * @var        int
	 */
	protected $marca_raya;

	/**
	 * The value for the marca_tatuaje field.
	 * @var        int
	 */
	protected $marca_tatuaje;

	/**
	 * The value for the marca_otra field.
	 * @var        int
	 */
	protected $marca_otra;

	/**
	 * The value for the visitas_anuales field.
	 * @var        string
	 */
	protected $visitas_anuales;

	/**
	 * The value for the propietario field.
	 * @var        string
	 */
	protected $propietario;

	/**
	 * The value for the administrador field.
	 * @var        string
	 */
	protected $administrador;

	/**
	 * The value for the lucro field.
	 * @var        int
	 */
	protected $lucro;

	/**
	 * The value for the ofrece_asesoria field.
	 * @var        int
	 */
	protected $ofrece_asesoria;

	/**
	 * The value for the personal_permanente field.
	 * @var        string
	 */
	protected $personal_permanente;

	/**
	 * The value for the personal_temporal field.
	 * @var        string
	 */
	protected $personal_temporal;

	/**
	 * The value for the horario_atencion field.
	 * @var        string
	 */
	protected $horario_atencion;

	/**
	 * The value for the objetivo field.
	 * @var        string
	 */
	protected $objetivo;

	/**
	 * The value for the senalizacion_porcentaje field.
	 * @var        string
	 */
	protected $senalizacion_porcentaje;

	/**
	 * The value for the zoologico_contacto field.
	 * @var        string
	 */
	protected $zoologico_contacto;

	/**
	 * The value for the boletin field.
	 * @var        string
	 */
	protected $boletin;

	/**
	 * The value for the programa_enriquecimiento field.
	 * @var        string
	 */
	protected $programa_enriquecimiento;

	/**
	 * The value for the programa_entrenamiento field.
	 * @var        string
	 */
	protected $programa_entrenamiento;

	/**
	 * The value for the programa_manejo_ambiental field.
	 * @var        string
	 */
	protected $programa_manejo_ambiental;

	/**
	 * The value for the programa_medicina_preventiva field.
	 * @var        string
	 */
	protected $programa_medicina_preventiva;

	/**
	 * The value for the consulta_externa_veterinaria field.
	 * @var        string
	 */
	protected $consulta_externa_veterinaria;

	/**
	 * The value for the show field.
	 * @var        string
	 */
	protected $show;

	/**
	 * The value for the documento_estrategico field.
	 * @var        string
	 */
	protected $documento_estrategico;

	/**
	 * The value for the proyecto_conservacion_exsitu field.
	 * @var        string
	 */
	protected $proyecto_conservacion_exsitu;

	/**
	 * The value for the proyecto_conservacion_insitu field.
	 * @var        string
	 */
	protected $proyecto_conservacion_insitu;

	/**
	 * The value for the asociacion_lista_asociaciones field.
	 * @var        string
	 */
	protected $asociacion_lista_asociaciones;

	/**
	 * The value for the asociacion_lista_instituciones field.
	 * @var        string
	 */
	protected $asociacion_lista_instituciones;

	/**
	 * The value for the asociacion_apoyo_desde_alpza field.
	 * @var        string
	 */
	protected $asociacion_apoyo_desde_alpza;

	/**
	 * The value for the asociacion_apoyo_hacia_alpza field.
	 * @var        string
	 */
	protected $asociacion_apoyo_hacia_alpza;

	/**
	 * The value for the asociacion_estatutos field.
	 * @var        string
	 */
	protected $asociacion_estatutos;

	/**
	 * The value for the asociacion_organigrama field.
	 * @var        string
	 */
	protected $asociacion_organigrama;

	/**
	 * The value for the asociacion_panorama_pais field.
	 * @var        string
	 */
	protected $asociacion_panorama_pais;

	/**
	 * @var        AlpzaMiembro
	 */
	protected $aAlpzaMiembro;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	// symfony behavior

	const PEER = 'AlpzaMiembroAsociadosPeer';

	/**
	 * Get the [id_alpza_miembro_asociados] column value.
	 *
	 * @return     int
	 */
	public function getIdAlpzaMiembroAsociados()
	{
		return $this->id_alpza_miembro_asociados;
	}

	/**
	 * Get the [alpza_miembro_id_alpza_miembro] column value.
	 *
	 * @return     int
	 */
	public function getAlpzaMiembroIdAlpzaMiembro()
	{
		return $this->alpza_miembro_id_alpza_miembro;
	}

	/**
	 * Get the [nombre_formal] column value.
	 *
	 * @return     string
	 */
	public function getNombreFormal()
	{
		return $this->nombre_formal;
	}

	/**
	 * Get the [sigla] column value.
	 *
	 * @return     string
	 */
	public function getSigla()
	{
		return $this->sigla;
	}

	/**
	 * Get the [tipo_institucion] column value.
	 *
	 * @return     string
	 */
	public function getTipoInstitucion()
	{
		return $this->tipo_institucion;
	}

	/**
	 * Get the [numero_identificacion] column value.
	 *
	 * @return     string
	 */
	public function getNumeroIdentificacion()
	{
		return $this->numero_identificacion;
	}

	/**
	 * Get the [optionally formatted] temporal [ano_fundacion] column value.
	 *
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getAnoFundacion($format = 'Y-m-d')
	{
		if ($this->ano_fundacion === null) {
			return null;
		}


		if ($this->ano_fundacion === '0000-00-00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->ano_fundacion);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->ano_fundacion, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [optionally formatted] temporal [ano_ingreso_alpza] column value.
	 *
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL, and 0 if column value is 0000-00-00
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getAnoIngresoAlpza($format = 'Y-m-d')
	{
		if ($this->ano_ingreso_alpza === null) {
			return null;
		}


		if ($this->ano_ingreso_alpza === '0000-00-00') {
			// while technically this is not a default value of NULL,
			// this seems to be closest in meaning.
			return null;
		} else {
			try {
				$dt = new DateTime($this->ano_ingreso_alpza);
			} catch (Exception $x) {
				throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->ano_ingreso_alpza, true), $x);
			}
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [director_nombre] column value.
	 *
	 * @return     string
	 */
	public function getDirectorNombre()
	{
		return $this->director_nombre;
	}

	/**
	 * Get the [director_email] column value.
	 *
	 * @return     string
	 */
	public function getDirectorEmail()
	{
		return $this->director_email;
	}

	/**
	 * Get the [delegado_nombre] column value.
	 *
	 * @return     string
	 */
	public function getDelegadoNombre()
	{
		return $this->delegado_nombre;
	}

	/**
	 * Get the [delegado_apellido] column value.
	 *
	 * @return     string
	 */
	public function getDelegadoApellido()
	{
		return $this->delegado_apellido;
	}

	/**
	 * Get the [delegado_cargo] column value.
	 *
	 * @return     string
	 */
	public function getDelegadoCargo()
	{
		return $this->delegado_cargo;
	}

	/**
	 * Get the [delegado_profesion] column value.
	 *
	 * @return     string
	 */
	public function getDelegadoProfesion()
	{
		return $this->delegado_profesion;
	}

	/**
	 * Get the [delegado_email] column value.
	 *
	 * @return     string
	 */
	public function getDelegadoEmail()
	{
		return $this->delegado_email;
	}

	/**
	 * Get the [logo] column value.
	 *
	 * @return     string
	 */
	public function getLogo()
	{
		return $this->logo;
	}

	/**
	 * Get the [direccion] column value.
	 *
	 * @return     string
	 */
	public function getDireccion()
	{
		return $this->direccion;
	}

	/**
	 * Get the [codigo_postal] column value.
	 *
	 * @return     string
	 */
	public function getCodigoPostal()
	{
		return $this->codigo_postal;
	}

	/**
	 * Get the [pais] column value.
	 *
	 * @return     string
	 */
	public function getPais()
	{
		return $this->pais;
	}

	/**
	 * Get the [telefono_cod_ciudad] column value.
	 *
	 * @return     string
	 */
	public function getTelefonoCodCiudad()
	{
		return $this->telefono_cod_ciudad;
	}

	/**
	 * Get the [telefono_cod_pais] column value.
	 *
	 * @return     string
	 */
	public function getTelefonoCodPais()
	{
		return $this->telefono_cod_pais;
	}

	/**
	 * Get the [telefono] column value.
	 *
	 * @return     string
	 */
	public function getTelefono()
	{
		return $this->telefono;
	}

	/**
	 * Get the [celular] column value.
	 *
	 * @return     string
	 */
	public function getCelular()
	{
		return $this->celular;
	}

	/**
	 * Get the [email] column value.
	 *
	 * @return     string
	 */
	public function getEmail()
	{
		return $this->email;
	}

	/**
	 * Get the [fax] column value.
	 *
	 * @return     string
	 */
	public function getFax()
	{
		return $this->fax;
	}

	/**
	 * Get the [sitio_web] column value.
	 *
	 * @return     string
	 */
	public function getSitioWeb()
	{
		return $this->sitio_web;
	}

	/**
	 * Get the [descripcion] column value.
	 *
	 * @return     string
	 */
	public function getDescripcion()
	{
		return $this->descripcion;
	}

	/**
	 * Get the [mision] column value.
	 *
	 * @return     string
	 */
	public function getMision()
	{
		return $this->mision;
	}

	/**
	 * Get the [vision] column value.
	 *
	 * @return     string
	 */
	public function getVision()
	{
		return $this->vision;
	}

	/**
	 * Get the [objetivos] column value.
	 *
	 * @return     string
	 */
	public function getObjetivos()
	{
		return $this->objetivos;
	}

	/**
	 * Get the [acreditacion_aza] column value.
	 *
	 * @return     int
	 */
	public function getAcreditacionAza()
	{
		return $this->acreditacion_aza;
	}

	/**
	 * Get the [acreditacion_iso14001] column value.
	 *
	 * @return     int
	 */
	public function getAcreditacionIso14001()
	{
		return $this->acreditacion_iso14001;
	}

	/**
	 * Get the [acreditacion_iso9001] column value.
	 *
	 * @return     int
	 */
	public function getAcreditacionIso9001()
	{
		return $this->acreditacion_iso9001;
	}

	/**
	 * Get the [acreditacion_otra] column value.
	 *
	 * @return     int
	 */
	public function getAcreditacionOtra()
	{
		return $this->acreditacion_otra;
	}

	/**
	 * Get the [asociacion_waza] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionWaza()
	{
		return $this->asociacion_waza;
	}

	/**
	 * Get the [asociacion_aza] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionAza()
	{
		return $this->asociacion_aza;
	}

	/**
	 * Get the [asociacion_eaza] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionEaza()
	{
		return $this->asociacion_eaza;
	}

	/**
	 * Get the [asociacion_ize] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionIze()
	{
		return $this->asociacion_ize;
	}

	/**
	 * Get the [asociacion_amaczoa] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionAmaczoa()
	{
		return $this->asociacion_amaczoa;
	}

	/**
	 * Get the [asociacion_isis] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionIsis()
	{
		return $this->asociacion_isis;
	}

	/**
	 * Get the [asociacion_otra] column value.
	 *
	 * @return     int
	 */
	public function getAsociacionOtra()
	{
		return $this->asociacion_otra;
	}

	/**
	 * Get the [marca_anillo] column value.
	 *
	 * @return     int
	 */
	public function getMarcaAnillo()
	{
		return $this->marca_anillo;
	}

	/**
	 * Get the [marca_banda] column value.
	 *
	 * @return     int
	 */
	public function getMarcaBanda()
	{
		return $this->marca_banda;
	}

	/**
	 * Get the [marca_caliente] column value.
	 *
	 * @return     int
	 */
	public function getMarcaCaliente()
	{
		return $this->marca_caliente;
	}

	/**
	 * Get the [marca_fria] column value.
	 *
	 * @return     int
	 */
	public function getMarcaFria()
	{
		return $this->marca_fria;
	}

	/**
	 * Get the [marca_microchip] column value.
	 *
	 * @return     int
	 */
	public function getMarcaMicrochip()
	{
		return $this->marca_microchip;
	}

	/**
	 * Get the [marca_natura] column value.
	 *
	 * @return     int
	 */
	public function getMarcaNatura()
	{
		return $this->marca_natura;
	}

	/**
	 * Get the [marca_piquete] column value.
	 *
	 * @return     int
	 */
	public function getMarcaPiquete()
	{
		return $this->marca_piquete;
	}

	/**
	 * Get the [marca_raya] column value.
	 *
	 * @return     int
	 */
	public function getMarcaRaya()
	{
		return $this->marca_raya;
	}

	/**
	 * Get the [marca_tatuaje] column value.
	 *
	 * @return     int
	 */
	public function getMarcaTatuaje()
	{
		return $this->marca_tatuaje;
	}

	/**
	 * Get the [marca_otra] column value.
	 *
	 * @return     int
	 */
	public function getMarcaOtra()
	{
		return $this->marca_otra;
	}

	/**
	 * Get the [visitas_anuales] column value.
	 *
	 * @return     string
	 */
	public function getVisitasAnuales()
	{
		return $this->visitas_anuales;
	}

	/**
	 * Get the [propietario] column value.
	 *
	 * @return     string
	 */
	public function getPropietario()
	{
		return $this->propietario;
	}

	/**
	 * Get the [administrador] column value.
	 *
	 * @return     string
	 */
	public function getAdministrador()
	{
		return $this->administrador;
	}

	/**
	 * Get the [lucro] column value.
	 *
	 * @return     int
	 */
	public function getLucro()
	{
		return $this->lucro;
	}

	/**
	 * Get the [ofrece_asesoria] column value.
	 *
	 * @return     int
	 */
	public function getOfreceAsesoria()
	{
		return $this->ofrece_asesoria;
	}

	/**
	 * Get the [personal_permanente] column value.
	 *
	 * @return     string
	 */
	public function getPersonalPermanente()
	{
		return $this->personal_permanente;
	}

	/**
	 * Get the [personal_temporal] column value.
	 *
	 * @return     string
	 */
	public function getPersonalTemporal()
	{
		return $this->personal_temporal;
	}

	/**
	 * Get the [horario_atencion] column value.
	 *
	 * @return     string
	 */
	public function getHorarioAtencion()
	{
		return $this->horario_atencion;
	}

	/**
	 * Get the [objetivo] column value.
	 *
	 * @return     string
	 */
	public function getObjetivo()
	{
		return $this->objetivo;
	}

	/**
	 * Get the [senalizacion_porcentaje] column value.
	 *
	 * @return     string
	 */
	public function getSenalizacionPorcentaje()
	{
		return $this->senalizacion_porcentaje;
	}

	/**
	 * Get the [zoologico_contacto] column value.
	 *
	 * @return     string
	 */
	public function getZoologicoContacto()
	{
		return $this->zoologico_contacto;
	}

	/**
	 * Get the [boletin] column value.
	 *
	 * @return     string
	 */
	public function getBoletin()
	{
		return $this->boletin;
	}

	/**
	 * Get the [programa_enriquecimiento] column value.
	 *
	 * @return     string
	 */
	public function getProgramaEnriquecimiento()
	{
		return $this->programa_enriquecimiento;
	}

	/**
	 * Get the [programa_entrenamiento] column value.
	 *
	 * @return     string
	 */
	public function getProgramaEntrenamiento()
	{
		return $this->programa_entrenamiento;
	}

	/**
	 * Get the [programa_manejo_ambiental] column value.
	 *
	 * @return     string
	 */
	public function getProgramaManejoAmbiental()
	{
		return $this->programa_manejo_ambiental;
	}

	/**
	 * Get the [programa_medicina_preventiva] column value.
	 *
	 * @return     string
	 */
	public function getProgramaMedicinaPreventiva()
	{
		return $this->programa_medicina_preventiva;
	}

	/**
	 * Get the [consulta_externa_veterinaria] column value.
	 *
	 * @return     string
	 */
	public function getConsultaExternaVeterinaria()
	{
		return $this->consulta_externa_veterinaria;
	}

	/**
	 * Get the [show] column value.
	 *
	 * @return     string
	 */
	public function getShow()
	{
		return $this->show;
	}

	/**
	 * Get the [documento_estrategico] column value.
	 *
	 * @return     string
	 */
	public function getDocumentoEstrategico()
	{
		return $this->documento_estrategico;
	}

	/**
	 * Get the [proyecto_conservacion_exsitu] column value.
	 *
	 * @return     string
	 */
	public function getProyectoConservacionExsitu()
	{
		return $this->proyecto_conservacion_exsitu;
	}

	/**
	 * Get the [proyecto_conservacion_insitu] column value.
	 *
	 * @return     string
	 */
	public function getProyectoConservacionInsitu()
	{
		return $this->proyecto_conservacion_insitu;
	}

	/**
	 * Get the [asociacion_lista_asociaciones] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionListaAsociaciones()
	{
		return $this->asociacion_lista_asociaciones;
	}

	/**
	 * Get the [asociacion_lista_instituciones] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionListaInstituciones()
	{
		return $this->asociacion_lista_instituciones;
	}

	/**
	 * Get the [asociacion_apoyo_desde_alpza] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionApoyoDesdeAlpza()
	{
		return $this->asociacion_apoyo_desde_alpza;
	}

	/**
	 * Get the [asociacion_apoyo_hacia_alpza] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionApoyoHaciaAlpza()
	{
		return $this->asociacion_apoyo_hacia_alpza;
	}

	/**
	 * Get the [asociacion_estatutos] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionEstatutos()
	{
		return $this->asociacion_estatutos;
	}

	/**
	 * Get the [asociacion_organigrama] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionOrganigrama()
	{
		return $this->asociacion_organigrama;
	}

	/**
	 * Get the [asociacion_panorama_pais] column value.
	 *
	 * @return     string
	 */
	public function getAsociacionPanoramaPais()
	{
		return $this->asociacion_panorama_pais;
	}

	/**
	 * Set the value of [id_alpza_miembro_asociados] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setIdAlpzaMiembroAsociados($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_alpza_miembro_asociados !== $v) {
			$this->id_alpza_miembro_asociados = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ID_ALPZA_MIEMBRO_ASOCIADOS;
		}

		return $this;
	} // setIdAlpzaMiembroAsociados()

	/**
	 * Set the value of [alpza_miembro_id_alpza_miembro] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAlpzaMiembroIdAlpzaMiembro($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->alpza_miembro_id_alpza_miembro !== $v) {
			$this->alpza_miembro_id_alpza_miembro = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ALPZA_MIEMBRO_ID_ALPZA_MIEMBRO;
		}

		if ($this->aAlpzaMiembro !== null && $this->aAlpzaMiembro->getIdAlpzaMiembro() !== $v) {
			$this->aAlpzaMiembro = null;
		}

		return $this;
	} // setAlpzaMiembroIdAlpzaMiembro()

	/**
	 * Set the value of [nombre_formal] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setNombreFormal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->nombre_formal !== $v) {
			$this->nombre_formal = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::NOMBRE_FORMAL;
		}

		return $this;
	} // setNombreFormal()

	/**
	 * Set the value of [sigla] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setSigla($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->sigla !== $v) {
			$this->sigla = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::SIGLA;
		}

		return $this;
	} // setSigla()

	/**
	 * Set the value of [tipo_institucion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setTipoInstitucion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tipo_institucion !== $v) {
			$this->tipo_institucion = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::TIPO_INSTITUCION;
		}

		return $this;
	} // setTipoInstitucion()

	/**
	 * Set the value of [numero_identificacion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setNumeroIdentificacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->numero_identificacion !== $v) {
			$this->numero_identificacion = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::NUMERO_IDENTIFICACION;
		}

		return $this;
	} // setNumeroIdentificacion()

	/**
	 * Sets the value of [ano_fundacion] column to a normalized version of the date/time value specified.
	 *
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAnoFundacion($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->ano_fundacion !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->ano_fundacion !== null && $tmpDt = new DateTime($this->ano_fundacion)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match
			)
			{
				$this->ano_fundacion = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ANO_FUNDACION;
			}
		} // if either are not null

		return $this;
	} // setAnoFundacion()

	/**
	 * Sets the value of [ano_ingreso_alpza] column to a normalized version of the date/time value specified.
	 *
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAnoIngresoAlpza($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->ano_ingreso_alpza !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->ano_ingreso_alpza !== null && $tmpDt = new DateTime($this->ano_ingreso_alpza)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match
			)
			{
				$this->ano_ingreso_alpza = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ANO_INGRESO_ALPZA;
			}
		} // if either are not null

		return $this;
	} // setAnoIngresoAlpza()

	/**
	 * Set the value of [director_nombre] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDirectorNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->director_nombre !== $v) {
			$this->director_nombre = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DIRECTOR_NOMBRE;
		}

		return $this;
	} // setDirectorNombre()

	/**
	 * Set the value of [director_email] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDirectorEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->director_email !== $v) {
			$this->director_email = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DIRECTOR_EMAIL;
		}

		return $this;
	} // setDirectorEmail()

	/**
	 * Set the value of [delegado_nombre] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDelegadoNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->delegado_nombre !== $v) {
			$this->delegado_nombre = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DELEGADO_NOMBRE;
		}

		return $this;
	} // setDelegadoNombre()

	/**
	 * Set the value of [delegado_apellido] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDelegadoApellido($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->delegado_apellido !== $v) {
			$this->delegado_apellido = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DELEGADO_APELLIDO;
		}

		return $this;
	} // setDelegadoApellido()

	/**
	 * Set the value of [delegado_cargo] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDelegadoCargo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->delegado_cargo !== $v) {
			$this->delegado_cargo = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DELEGADO_CARGO;
		}

		return $this;
	} // setDelegadoCargo()

	/**
	 * Set the value of [delegado_profesion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDelegadoProfesion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->delegado_profesion !== $v) {
			$this->delegado_profesion = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DELEGADO_PROFESION;
		}

		return $this;
	} // setDelegadoProfesion()

	/**
	 * Set the value of [delegado_email] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDelegadoEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->delegado_email !== $v) {
			$this->delegado_email = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DELEGADO_EMAIL;
		}

		return $this;
	} // setDelegadoEmail()

	/**
	 * Set the value of [logo] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setLogo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->logo !== $v) {
			$this->logo = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::LOGO;
		}

		return $this;
	} // setLogo()

	/**
	 * Set the value of [direccion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDireccion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->direccion !== $v) {
			$this->direccion = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DIRECCION;
		}

		return $this;
	} // setDireccion()

	/**
	 * Set the value of [codigo_postal] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setCodigoPostal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->codigo_postal !== $v) {
			$this->codigo_postal = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::CODIGO_POSTAL;
		}

		return $this;
	} // setCodigoPostal()

	/**
	 * Set the value of [pais] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pais !== $v) {
			$this->pais = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PAIS;
		}

		return $this;
	} // setPais()

	/**
	 * Set the value of [telefono_cod_ciudad] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setTelefonoCodCiudad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->telefono_cod_ciudad !== $v) {
			$this->telefono_cod_ciudad = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::TELEFONO_COD_CIUDAD;
		}

		return $this;
	} // setTelefonoCodCiudad()

	/**
	 * Set the value of [telefono_cod_pais] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setTelefonoCodPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->telefono_cod_pais !== $v) {
			$this->telefono_cod_pais = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::TELEFONO_COD_PAIS;
		}

		return $this;
	} // setTelefonoCodPais()

	/**
	 * Set the value of [telefono] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setTelefono($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->telefono !== $v) {
			$this->telefono = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::TELEFONO;
		}

		return $this;
	} // setTelefono()

	/**
	 * Set the value of [celular] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setCelular($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->celular !== $v) {
			$this->celular = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::CELULAR;
		}

		return $this;
	} // setCelular()

	/**
	 * Set the value of [email] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setEmail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->email !== $v) {
			$this->email = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::EMAIL;
		}

		return $this;
	} // setEmail()

	/**
	 * Set the value of [fax] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fax !== $v) {
			$this->fax = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::FAX;
		}

		return $this;
	} // setFax()

	/**
	 * Set the value of [sitio_web] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setSitioWeb($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->sitio_web !== $v) {
			$this->sitio_web = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::SITIO_WEB;
		}

		return $this;
	} // setSitioWeb()

	/**
	 * Set the value of [descripcion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDescripcion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->descripcion !== $v) {
			$this->descripcion = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DESCRIPCION;
		}

		return $this;
	} // setDescripcion()

	/**
	 * Set the value of [mision] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMision($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->mision !== $v) {
			$this->mision = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MISION;
		}

		return $this;
	} // setMision()

	/**
	 * Set the value of [vision] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setVision($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->vision !== $v) {
			$this->vision = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::VISION;
		}

		return $this;
	} // setVision()

	/**
	 * Set the value of [objetivos] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setObjetivos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->objetivos !== $v) {
			$this->objetivos = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::OBJETIVOS;
		}

		return $this;
	} // setObjetivos()

	/**
	 * Set the value of [acreditacion_aza] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAcreditacionAza($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->acreditacion_aza !== $v) {
			$this->acreditacion_aza = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ACREDITACION_AZA;
		}

		return $this;
	} // setAcreditacionAza()

	/**
	 * Set the value of [acreditacion_iso14001] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAcreditacionIso14001($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->acreditacion_iso14001 !== $v) {
			$this->acreditacion_iso14001 = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ACREDITACION_ISO14001;
		}

		return $this;
	} // setAcreditacionIso14001()

	/**
	 * Set the value of [acreditacion_iso9001] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAcreditacionIso9001($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->acreditacion_iso9001 !== $v) {
			$this->acreditacion_iso9001 = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ACREDITACION_ISO9001;
		}

		return $this;
	} // setAcreditacionIso9001()

	/**
	 * Set the value of [acreditacion_otra] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAcreditacionOtra($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->acreditacion_otra !== $v) {
			$this->acreditacion_otra = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ACREDITACION_OTRA;
		}

		return $this;
	} // setAcreditacionOtra()

	/**
	 * Set the value of [asociacion_waza] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionWaza($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_waza !== $v) {
			$this->asociacion_waza = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_WAZA;
		}

		return $this;
	} // setAsociacionWaza()

	/**
	 * Set the value of [asociacion_aza] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionAza($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_aza !== $v) {
			$this->asociacion_aza = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_AZA;
		}

		return $this;
	} // setAsociacionAza()

	/**
	 * Set the value of [asociacion_eaza] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionEaza($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_eaza !== $v) {
			$this->asociacion_eaza = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_EAZA;
		}

		return $this;
	} // setAsociacionEaza()

	/**
	 * Set the value of [asociacion_ize] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionIze($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_ize !== $v) {
			$this->asociacion_ize = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_IZE;
		}

		return $this;
	} // setAsociacionIze()

	/**
	 * Set the value of [asociacion_amaczoa] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionAmaczoa($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_amaczoa !== $v) {
			$this->asociacion_amaczoa = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_AMACZOA;
		}

		return $this;
	} // setAsociacionAmaczoa()

	/**
	 * Set the value of [asociacion_isis] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionIsis($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_isis !== $v) {
			$this->asociacion_isis = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_ISIS;
		}

		return $this;
	} // setAsociacionIsis()

	/**
	 * Set the value of [asociacion_otra] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionOtra($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->asociacion_otra !== $v) {
			$this->asociacion_otra = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_OTRA;
		}

		return $this;
	} // setAsociacionOtra()

	/**
	 * Set the value of [marca_anillo] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaAnillo($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_anillo !== $v) {
			$this->marca_anillo = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_ANILLO;
		}

		return $this;
	} // setMarcaAnillo()

	/**
	 * Set the value of [marca_banda] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaBanda($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_banda !== $v) {
			$this->marca_banda = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_BANDA;
		}

		return $this;
	} // setMarcaBanda()

	/**
	 * Set the value of [marca_caliente] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaCaliente($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_caliente !== $v) {
			$this->marca_caliente = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_CALIENTE;
		}

		return $this;
	} // setMarcaCaliente()

	/**
	 * Set the value of [marca_fria] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaFria($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_fria !== $v) {
			$this->marca_fria = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_FRIA;
		}

		return $this;
	} // setMarcaFria()

	/**
	 * Set the value of [marca_microchip] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaMicrochip($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_microchip !== $v) {
			$this->marca_microchip = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_MICROCHIP;
		}

		return $this;
	} // setMarcaMicrochip()

	/**
	 * Set the value of [marca_natura] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaNatura($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_natura !== $v) {
			$this->marca_natura = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_NATURA;
		}

		return $this;
	} // setMarcaNatura()

	/**
	 * Set the value of [marca_piquete] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaPiquete($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_piquete !== $v) {
			$this->marca_piquete = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_PIQUETE;
		}

		return $this;
	} // setMarcaPiquete()

	/**
	 * Set the value of [marca_raya] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaRaya($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_raya !== $v) {
			$this->marca_raya = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_RAYA;
		}

		return $this;
	} // setMarcaRaya()

	/**
	 * Set the value of [marca_tatuaje] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaTatuaje($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_tatuaje !== $v) {
			$this->marca_tatuaje = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_TATUAJE;
		}

		return $this;
	} // setMarcaTatuaje()

	/**
	 * Set the value of [marca_otra] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setMarcaOtra($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->marca_otra !== $v) {
			$this->marca_otra = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::MARCA_OTRA;
		}

		return $this;
	} // setMarcaOtra()

	/**
	 * Set the value of [visitas_anuales] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setVisitasAnuales($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->visitas_anuales !== $v) {
			$this->visitas_anuales = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::VISITAS_ANUALES;
		}

		return $this;
	} // setVisitasAnuales()

	/**
	 * Set the value of [propietario] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setPropietario($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->propietario !== $v) {
			$this->propietario = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROPIETARIO;
		}

		return $this;
	} // setPropietario()

	/**
	 * Set the value of [administrador] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAdministrador($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->administrador !== $v) {
			$this->administrador = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ADMINISTRADOR;
		}

		return $this;
	} // setAdministrador()

	/**
	 * Set the value of [lucro] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setLucro($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->lucro !== $v) {
			$this->lucro = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::LUCRO;
		}

		return $this;
	} // setLucro()

	/**
	 * Set the value of [ofrece_asesoria] column.
	 *
	 * @param      int $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setOfreceAsesoria($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ofrece_asesoria !== $v) {
			$this->ofrece_asesoria = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::OFRECE_ASESORIA;
		}

		return $this;
	} // setOfreceAsesoria()

	/**
	 * Set the value of [personal_permanente] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setPersonalPermanente($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->personal_permanente !== $v) {
			$this->personal_permanente = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PERSONAL_PERMANENTE;
		}

		return $this;
	} // setPersonalPermanente()

	/**
	 * Set the value of [personal_temporal] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setPersonalTemporal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->personal_temporal !== $v) {
			$this->personal_temporal = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PERSONAL_TEMPORAL;
		}

		return $this;
	} // setPersonalTemporal()

	/**
	 * Set the value of [horario_atencion] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setHorarioAtencion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->horario_atencion !== $v) {
			$this->horario_atencion = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::HORARIO_ATENCION;
		}

		return $this;
	} // setHorarioAtencion()

	/**
	 * Set the value of [objetivo] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setObjetivo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->objetivo !== $v) {
			$this->objetivo = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::OBJETIVO;
		}

		return $this;
	} // setObjetivo()

	/**
	 * Set the value of [senalizacion_porcentaje] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setSenalizacionPorcentaje($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->senalizacion_porcentaje !== $v) {
			$this->senalizacion_porcentaje = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::SENALIZACION_PORCENTAJE;
		}

		return $this;
	} // setSenalizacionPorcentaje()

	/**
	 * Set the value of [zoologico_contacto] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setZoologicoContacto($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->zoologico_contacto !== $v) {
			$this->zoologico_contacto = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ZOOLOGICO_CONTACTO;
		}

		return $this;
	} // setZoologicoContacto()

	/**
	 * Set the value of [boletin] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setBoletin($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->boletin !== $v) {
			$this->boletin = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::BOLETIN;
		}

		return $this;
	} // setBoletin()

	/**
	 * Set the value of [programa_enriquecimiento] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setProgramaEnriquecimiento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_enriquecimiento !== $v) {
			$this->programa_enriquecimiento = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROGRAMA_ENRIQUECIMIENTO;
		}

		return $this;
	} // setProgramaEnriquecimiento()

	/**
	 * Set the value of [programa_entrenamiento] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setProgramaEntrenamiento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_entrenamiento !== $v) {
			$this->programa_entrenamiento = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROGRAMA_ENTRENAMIENTO;
		}

		return $this;
	} // setProgramaEntrenamiento()

	/**
	 * Set the value of [programa_manejo_ambiental] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setProgramaManejoAmbiental($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_manejo_ambiental !== $v) {
			$this->programa_manejo_ambiental = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROGRAMA_MANEJO_AMBIENTAL;
		}

		return $this;
	} // setProgramaManejoAmbiental()

	/**
	 * Set the value of [programa_medicina_preventiva] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setProgramaMedicinaPreventiva($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->programa_medicina_preventiva !== $v) {
			$this->programa_medicina_preventiva = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROGRAMA_MEDICINA_PREVENTIVA;
		}

		return $this;
	} // setProgramaMedicinaPreventiva()

	/**
	 * Set the value of [consulta_externa_veterinaria] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setConsultaExternaVeterinaria($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->consulta_externa_veterinaria !== $v) {
			$this->consulta_externa_veterinaria = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::CONSULTA_EXTERNA_VETERINARIA;
		}

		return $this;
	} // setConsultaExternaVeterinaria()

	/**
	 * Set the value of [show] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setShow($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->show !== $v) {
			$this->show = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::SHOW;
		}

		return $this;
	} // setShow()

	/**
	 * Set the value of [documento_estrategico] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setDocumentoEstrategico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->documento_estrategico !== $v) {
			$this->documento_estrategico = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::DOCUMENTO_ESTRATEGICO;
		}

		return $this;
	} // setDocumentoEstrategico()

	/**
	 * Set the value of [proyecto_conservacion_exsitu] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setProyectoConservacionExsitu($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->proyecto_conservacion_exsitu !== $v) {
			$this->proyecto_conservacion_exsitu = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROYECTO_CONSERVACION_EXSITU;
		}

		return $this;
	} // setProyectoConservacionExsitu()

	/**
	 * Set the value of [proyecto_conservacion_insitu] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setProyectoConservacionInsitu($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->proyecto_conservacion_insitu !== $v) {
			$this->proyecto_conservacion_insitu = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::PROYECTO_CONSERVACION_INSITU;
		}

		return $this;
	} // setProyectoConservacionInsitu()

	/**
	 * Set the value of [asociacion_lista_asociaciones] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionListaAsociaciones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_lista_asociaciones !== $v) {
			$this->asociacion_lista_asociaciones = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_LISTA_ASOCIACIONES;
		}

		return $this;
	} // setAsociacionListaAsociaciones()

	/**
	 * Set the value of [asociacion_lista_instituciones] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionListaInstituciones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_lista_instituciones !== $v) {
			$this->asociacion_lista_instituciones = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_LISTA_INSTITUCIONES;
		}

		return $this;
	} // setAsociacionListaInstituciones()

	/**
	 * Set the value of [asociacion_apoyo_desde_alpza] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionApoyoDesdeAlpza($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_apoyo_desde_alpza !== $v) {
			$this->asociacion_apoyo_desde_alpza = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_APOYO_DESDE_ALPZA;
		}

		return $this;
	} // setAsociacionApoyoDesdeAlpza()

	/**
	 * Set the value of [asociacion_apoyo_hacia_alpza] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionApoyoHaciaAlpza($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_apoyo_hacia_alpza !== $v) {
			$this->asociacion_apoyo_hacia_alpza = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_APOYO_HACIA_ALPZA;
		}

		return $this;
	} // setAsociacionApoyoHaciaAlpza()

	/**
	 * Set the value of [asociacion_estatutos] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionEstatutos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_estatutos !== $v) {
			$this->asociacion_estatutos = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_ESTATUTOS;
		}

		return $this;
	} // setAsociacionEstatutos()

	/**
	 * Set the value of [asociacion_organigrama] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionOrganigrama($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_organigrama !== $v) {
			$this->asociacion_organigrama = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_ORGANIGRAMA;
		}

		return $this;
	} // setAsociacionOrganigrama()

	/**
	 * Set the value of [asociacion_panorama_pais] column.
	 *
	 * @param      string $v new value
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 */
	public function setAsociacionPanoramaPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->asociacion_panorama_pais !== $v) {
			$this->asociacion_panorama_pais = $v;
			$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ASOCIACION_PANORAMA_PAIS;
		}

		return $this;
	} // setAsociacionPanoramaPais()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->id_alpza_miembro_asociados = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->alpza_miembro_id_alpza_miembro = ($row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			$this->nombre_formal = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->sigla = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->tipo_institucion = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->numero_identificacion = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->ano_fundacion = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->ano_ingreso_alpza = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->director_nombre = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->director_email = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->delegado_nombre = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->delegado_apellido = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->delegado_cargo = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->delegado_profesion = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->delegado_email = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->logo = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->direccion = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->codigo_postal = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->pais = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->telefono_cod_ciudad = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->telefono_cod_pais = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->telefono = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->celular = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->email = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->fax = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->sitio_web = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->descripcion = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->mision = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->vision = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->objetivos = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->acreditacion_aza = ($row[$startcol + 30] !== null) ? (int) $row[$startcol + 30] : null;
			$this->acreditacion_iso14001 = ($row[$startcol + 31] !== null) ? (int) $row[$startcol + 31] : null;
			$this->acreditacion_iso9001 = ($row[$startcol + 32] !== null) ? (int) $row[$startcol + 32] : null;
			$this->acreditacion_otra = ($row[$startcol + 33] !== null) ? (int) $row[$startcol + 33] : null;
			$this->asociacion_waza = ($row[$startcol + 34] !== null) ? (int) $row[$startcol + 34] : null;
			$this->asociacion_aza = ($row[$startcol + 35] !== null) ? (int) $row[$startcol + 35] : null;
			$this->asociacion_eaza = ($row[$startcol + 36] !== null) ? (int) $row[$startcol + 36] : null;
			$this->asociacion_ize = ($row[$startcol + 37] !== null) ? (int) $row[$startcol + 37] : null;
			$this->asociacion_amaczoa = ($row[$startcol + 38] !== null) ? (int) $row[$startcol + 38] : null;
			$this->asociacion_isis = ($row[$startcol + 39] !== null) ? (int) $row[$startcol + 39] : null;
			$this->asociacion_otra = ($row[$startcol + 40] !== null) ? (int) $row[$startcol + 40] : null;
			$this->marca_anillo = ($row[$startcol + 41] !== null) ? (int) $row[$startcol + 41] : null;
			$this->marca_banda = ($row[$startcol + 42] !== null) ? (int) $row[$startcol + 42] : null;
			$this->marca_caliente = ($row[$startcol + 43] !== null) ? (int) $row[$startcol + 43] : null;
			$this->marca_fria = ($row[$startcol + 44] !== null) ? (int) $row[$startcol + 44] : null;
			$this->marca_microchip = ($row[$startcol + 45] !== null) ? (int) $row[$startcol + 45] : null;
			$this->marca_natura = ($row[$startcol + 46] !== null) ? (int) $row[$startcol + 46] : null;
			$this->marca_piquete = ($row[$startcol + 47] !== null) ? (int) $row[$startcol + 47] : null;
			$this->marca_raya = ($row[$startcol + 48] !== null) ? (int) $row[$startcol + 48] : null;
			$this->marca_tatuaje = ($row[$startcol + 49] !== null) ? (int) $row[$startcol + 49] : null;
			$this->marca_otra = ($row[$startcol + 50] !== null) ? (int) $row[$startcol + 50] : null;
			$this->visitas_anuales = ($row[$startcol + 51] !== null) ? (string) $row[$startcol + 51] : null;
			$this->propietario = ($row[$startcol + 52] !== null) ? (string) $row[$startcol + 52] : null;
			$this->administrador = ($row[$startcol + 53] !== null) ? (string) $row[$startcol + 53] : null;
			$this->lucro = ($row[$startcol + 54] !== null) ? (int) $row[$startcol + 54] : null;
			$this->ofrece_asesoria = ($row[$startcol + 55] !== null) ? (int) $row[$startcol + 55] : null;
			$this->personal_permanente = ($row[$startcol + 56] !== null) ? (string) $row[$startcol + 56] : null;
			$this->personal_temporal = ($row[$startcol + 57] !== null) ? (string) $row[$startcol + 57] : null;
			$this->horario_atencion = ($row[$startcol + 58] !== null) ? (string) $row[$startcol + 58] : null;
			$this->objetivo = ($row[$startcol + 59] !== null) ? (string) $row[$startcol + 59] : null;
			$this->senalizacion_porcentaje = ($row[$startcol + 60] !== null) ? (string) $row[$startcol + 60] : null;
			$this->zoologico_contacto = ($row[$startcol + 61] !== null) ? (string) $row[$startcol + 61] : null;
			$this->boletin = ($row[$startcol + 62] !== null) ? (string) $row[$startcol + 62] : null;
			$this->programa_enriquecimiento = ($row[$startcol + 63] !== null) ? (string) $row[$startcol + 63] : null;
			$this->programa_entrenamiento = ($row[$startcol + 64] !== null) ? (string) $row[$startcol + 64] : null;
			$this->programa_manejo_ambiental = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->programa_medicina_preventiva = ($row[$startcol + 66] !== null) ? (string) $row[$startcol + 66] : null;
			$this->consulta_externa_veterinaria = ($row[$startcol + 67] !== null) ? (string) $row[$startcol + 67] : null;
			$this->show = ($row[$startcol + 68] !== null) ? (string) $row[$startcol + 68] : null;
			$this->documento_estrategico = ($row[$startcol + 69] !== null) ? (string) $row[$startcol + 69] : null;
			$this->proyecto_conservacion_exsitu = ($row[$startcol + 70] !== null) ? (string) $row[$startcol + 70] : null;
			$this->proyecto_conservacion_insitu = ($row[$startcol + 71] !== null) ? (string) $row[$startcol + 71] : null;
			$this->asociacion_lista_asociaciones = ($row[$startcol + 72] !== null) ? (string) $row[$startcol + 72] : null;
			$this->asociacion_lista_instituciones = ($row[$startcol + 73] !== null) ? (string) $row[$startcol + 73] : null;
			$this->asociacion_apoyo_desde_alpza = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->asociacion_apoyo_hacia_alpza = ($row[$startcol + 75] !== null) ? (string) $row[$startcol + 75] : null;
			$this->asociacion_estatutos = ($row[$startcol + 76] !== null) ? (string) $row[$startcol + 76] : null;
			$this->asociacion_organigrama = ($row[$startcol + 77] !== null) ? (string) $row[$startcol + 77] : null;
			$this->asociacion_panorama_pais = ($row[$startcol + 78] !== null) ? (string) $row[$startcol + 78] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 79; // 79 = AlpzaMiembroAsociadosPeer::NUM_COLUMNS - AlpzaMiembroAsociadosPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating AlpzaMiembroAsociados object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

		if ($this->aAlpzaMiembro !== null && $this->alpza_miembro_id_alpza_miembro !== $this->aAlpzaMiembro->getIdAlpzaMiembro()) {
			$this->aAlpzaMiembro = null;
		}
	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AlpzaMiembroAsociadosPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = AlpzaMiembroAsociadosPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

			$this->aAlpzaMiembro = null;
		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AlpzaMiembroAsociadosPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}

		$con->beginTransaction();
		try {
			$ret = $this->preDelete($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseAlpzaMiembroAsociados:delete:pre') as $callable)
			{
				if (call_user_func($callable, $this, $con))
				{
					$con->commit();
						
					return;
				}
			}

			if ($ret) {
				AlpzaMiembroAsociadosPeer::doDelete($this, $con);
				$this->postDelete($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseAlpzaMiembroAsociados:delete:post') as $callable)
				{
					call_user_func($callable, $this, $con);
				}

				$this->setDeleted(true);
				$con->commit();
			} else {
				$con->commit();
			}
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(AlpzaMiembroAsociadosPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}

		$con->beginTransaction();
		$isInsert = $this->isNew();
		try {
			$ret = $this->preSave($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseAlpzaMiembroAsociados:save:pre') as $callable)
			{
				if (is_integer($affectedRows = call_user_func($callable, $this, $con)))
				{
					$con->commit();
						
					return $affectedRows;
				}
			}

			if ($isInsert) {
				$ret = $ret && $this->preInsert($con);
			} else {
				$ret = $ret && $this->preUpdate($con);
			}
			if ($ret) {
				$affectedRows = $this->doSave($con);
				if ($isInsert) {
					$this->postInsert($con);
				} else {
					$this->postUpdate($con);
				}
				$this->postSave($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseAlpzaMiembroAsociados:save:post') as $callable)
				{
					call_user_func($callable, $this, $con, $affectedRows);
				}

				AlpzaMiembroAsociadosPeer::addInstanceToPool($this);
			} else {
				$affectedRows = 0;
			}
			$con->commit();
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			// We call the save method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aAlpzaMiembro !== null) {
				if ($this->aAlpzaMiembro->isModified() || $this->aAlpzaMiembro->isNew()) {
					$affectedRows += $this->aAlpzaMiembro->save($con);
				}
				$this->setAlpzaMiembro($this->aAlpzaMiembro);
			}

			if ($this->isNew() ) {
				$this->modifiedColumns[] = AlpzaMiembroAsociadosPeer::ID_ALPZA_MIEMBRO_ASOCIADOS;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = AlpzaMiembroAsociadosPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
					// should always be true here (even though technically
					// BasePeer::doInsert() can insert multiple rows).

					$this->setIdAlpzaMiembroAsociados($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += AlpzaMiembroAsociadosPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			// We call the validate method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aAlpzaMiembro !== null) {
				if (!$this->aAlpzaMiembro->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aAlpzaMiembro->getValidationFailures());
				}
			}


			if (($retval = AlpzaMiembroAsociadosPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = AlpzaMiembroAsociadosPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getIdAlpzaMiembroAsociados();
				break;
			case 1:
				return $this->getAlpzaMiembroIdAlpzaMiembro();
				break;
			case 2:
				return $this->getNombreFormal();
				break;
			case 3:
				return $this->getSigla();
				break;
			case 4:
				return $this->getTipoInstitucion();
				break;
			case 5:
				return $this->getNumeroIdentificacion();
				break;
			case 6:
				return $this->getAnoFundacion();
				break;
			case 7:
				return $this->getAnoIngresoAlpza();
				break;
			case 8:
				return $this->getDirectorNombre();
				break;
			case 9:
				return $this->getDirectorEmail();
				break;
			case 10:
				return $this->getDelegadoNombre();
				break;
			case 11:
				return $this->getDelegadoApellido();
				break;
			case 12:
				return $this->getDelegadoCargo();
				break;
			case 13:
				return $this->getDelegadoProfesion();
				break;
			case 14:
				return $this->getDelegadoEmail();
				break;
			case 15:
				return $this->getLogo();
				break;
			case 16:
				return $this->getDireccion();
				break;
			case 17:
				return $this->getCodigoPostal();
				break;
			case 18:
				return $this->getPais();
				break;
			case 19:
				return $this->getTelefonoCodCiudad();
				break;
			case 20:
				return $this->getTelefonoCodPais();
				break;
			case 21:
				return $this->getTelefono();
				break;
			case 22:
				return $this->getCelular();
				break;
			case 23:
				return $this->getEmail();
				break;
			case 24:
				return $this->getFax();
				break;
			case 25:
				return $this->getSitioWeb();
				break;
			case 26:
				return $this->getDescripcion();
				break;
			case 27:
				return $this->getMision();
				break;
			case 28:
				return $this->getVision();
				break;
			case 29:
				return $this->getObjetivos();
				break;
			case 30:
				return $this->getAcreditacionAza();
				break;
			case 31:
				return $this->getAcreditacionIso14001();
				break;
			case 32:
				return $this->getAcreditacionIso9001();
				break;
			case 33:
				return $this->getAcreditacionOtra();
				break;
			case 34:
				return $this->getAsociacionWaza();
				break;
			case 35:
				return $this->getAsociacionAza();
				break;
			case 36:
				return $this->getAsociacionEaza();
				break;
			case 37:
				return $this->getAsociacionIze();
				break;
			case 38:
				return $this->getAsociacionAmaczoa();
				break;
			case 39:
				return $this->getAsociacionIsis();
				break;
			case 40:
				return $this->getAsociacionOtra();
				break;
			case 41:
				return $this->getMarcaAnillo();
				break;
			case 42:
				return $this->getMarcaBanda();
				break;
			case 43:
				return $this->getMarcaCaliente();
				break;
			case 44:
				return $this->getMarcaFria();
				break;
			case 45:
				return $this->getMarcaMicrochip();
				break;
			case 46:
				return $this->getMarcaNatura();
				break;
			case 47:
				return $this->getMarcaPiquete();
				break;
			case 48:
				return $this->getMarcaRaya();
				break;
			case 49:
				return $this->getMarcaTatuaje();
				break;
			case 50:
				return $this->getMarcaOtra();
				break;
			case 51:
				return $this->getVisitasAnuales();
				break;
			case 52:
				return $this->getPropietario();
				break;
			case 53:
				return $this->getAdministrador();
				break;
			case 54:
				return $this->getLucro();
				break;
			case 55:
				return $this->getOfreceAsesoria();
				break;
			case 56:
				return $this->getPersonalPermanente();
				break;
			case 57:
				return $this->getPersonalTemporal();
				break;
			case 58:
				return $this->getHorarioAtencion();
				break;
			case 59:
				return $this->getObjetivo();
				break;
			case 60:
				return $this->getSenalizacionPorcentaje();
				break;
			case 61:
				return $this->getZoologicoContacto();
				break;
			case 62:
				return $this->getBoletin();
				break;
			case 63:
				return $this->getProgramaEnriquecimiento();
				break;
			case 64:
				return $this->getProgramaEntrenamiento();
				break;
			case 65:
				return $this->getProgramaManejoAmbiental();
				break;
			case 66:
				return $this->getProgramaMedicinaPreventiva();
				break;
			case 67:
				return $this->getConsultaExternaVeterinaria();
				break;
			case 68:
				return $this->getShow();
				break;
			case 69:
				return $this->getDocumentoEstrategico();
				break;
			case 70:
				return $this->getProyectoConservacionExsitu();
				break;
			case 71:
				return $this->getProyectoConservacionInsitu();
				break;
			case 72:
				return $this->getAsociacionListaAsociaciones();
				break;
			case 73:
				return $this->getAsociacionListaInstituciones();
				break;
			case 74:
				return $this->getAsociacionApoyoDesdeAlpza();
				break;
			case 75:
				return $this->getAsociacionApoyoHaciaAlpza();
				break;
			case 76:
				return $this->getAsociacionEstatutos();
				break;
			case 77:
				return $this->getAsociacionOrganigrama();
				break;
			case 78:
				return $this->getAsociacionPanoramaPais();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = AlpzaMiembroAsociadosPeer::getFieldNames($keyType);
		$result = array(
		$keys[0] => $this->getIdAlpzaMiembroAsociados(),
		$keys[1] => $this->getAlpzaMiembroIdAlpzaMiembro(),
		$keys[2] => $this->getNombreFormal(),
		$keys[3] => $this->getSigla(),
		$keys[4] => $this->getTipoInstitucion(),
		$keys[5] => $this->getNumeroIdentificacion(),
		$keys[6] => $this->getAnoFundacion(),
		$keys[7] => $this->getAnoIngresoAlpza(),
		$keys[8] => $this->getDirectorNombre(),
		$keys[9] => $this->getDirectorEmail(),
		$keys[10] => $this->getDelegadoNombre(),
		$keys[11] => $this->getDelegadoApellido(),
		$keys[12] => $this->getDelegadoCargo(),
		$keys[13] => $this->getDelegadoProfesion(),
		$keys[14] => $this->getDelegadoEmail(),
		$keys[15] => $this->getLogo(),
		$keys[16] => $this->getDireccion(),
		$keys[17] => $this->getCodigoPostal(),
		$keys[18] => $this->getPais(),
		$keys[19] => $this->getTelefonoCodCiudad(),
		$keys[20] => $this->getTelefonoCodPais(),
		$keys[21] => $this->getTelefono(),
		$keys[22] => $this->getCelular(),
		$keys[23] => $this->getEmail(),
		$keys[24] => $this->getFax(),
		$keys[25] => $this->getSitioWeb(),
		$keys[26] => $this->getDescripcion(),
		$keys[27] => $this->getMision(),
		$keys[28] => $this->getVision(),
		$keys[29] => $this->getObjetivos(),
		$keys[30] => $this->getAcreditacionAza(),
		$keys[31] => $this->getAcreditacionIso14001(),
		$keys[32] => $this->getAcreditacionIso9001(),
		$keys[33] => $this->getAcreditacionOtra(),
		$keys[34] => $this->getAsociacionWaza(),
		$keys[35] => $this->getAsociacionAza(),
		$keys[36] => $this->getAsociacionEaza(),
		$keys[37] => $this->getAsociacionIze(),
		$keys[38] => $this->getAsociacionAmaczoa(),
		$keys[39] => $this->getAsociacionIsis(),
		$keys[40] => $this->getAsociacionOtra(),
		$keys[41] => $this->getMarcaAnillo(),
		$keys[42] => $this->getMarcaBanda(),
		$keys[43] => $this->getMarcaCaliente(),
		$keys[44] => $this->getMarcaFria(),
		$keys[45] => $this->getMarcaMicrochip(),
		$keys[46] => $this->getMarcaNatura(),
		$keys[47] => $this->getMarcaPiquete(),
		$keys[48] => $this->getMarcaRaya(),
		$keys[49] => $this->getMarcaTatuaje(),
		$keys[50] => $this->getMarcaOtra(),
		$keys[51] => $this->getVisitasAnuales(),
		$keys[52] => $this->getPropietario(),
		$keys[53] => $this->getAdministrador(),
		$keys[54] => $this->getLucro(),
		$keys[55] => $this->getOfreceAsesoria(),
		$keys[56] => $this->getPersonalPermanente(),
		$keys[57] => $this->getPersonalTemporal(),
		$keys[58] => $this->getHorarioAtencion(),
		$keys[59] => $this->getObjetivo(),
		$keys[60] => $this->getSenalizacionPorcentaje(),
		$keys[61] => $this->getZoologicoContacto(),
		$keys[62] => $this->getBoletin(),
		$keys[63] => $this->getProgramaEnriquecimiento(),
		$keys[64] => $this->getProgramaEntrenamiento(),
		$keys[65] => $this->getProgramaManejoAmbiental(),
		$keys[66] => $this->getProgramaMedicinaPreventiva(),
		$keys[67] => $this->getConsultaExternaVeterinaria(),
		$keys[68] => $this->getShow(),
		$keys[69] => $this->getDocumentoEstrategico(),
		$keys[70] => $this->getProyectoConservacionExsitu(),
		$keys[71] => $this->getProyectoConservacionInsitu(),
		$keys[72] => $this->getAsociacionListaAsociaciones(),
		$keys[73] => $this->getAsociacionListaInstituciones(),
		$keys[74] => $this->getAsociacionApoyoDesdeAlpza(),
		$keys[75] => $this->getAsociacionApoyoHaciaAlpza(),
		$keys[76] => $this->getAsociacionEstatutos(),
		$keys[77] => $this->getAsociacionOrganigrama(),
		$keys[78] => $this->getAsociacionPanoramaPais(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = AlpzaMiembroAsociadosPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setIdAlpzaMiembroAsociados($value);
				break;
			case 1:
				$this->setAlpzaMiembroIdAlpzaMiembro($value);
				break;
			case 2:
				$this->setNombreFormal($value);
				break;
			case 3:
				$this->setSigla($value);
				break;
			case 4:
				$this->setTipoInstitucion($value);
				break;
			case 5:
				$this->setNumeroIdentificacion($value);
				break;
			case 6:
				$this->setAnoFundacion($value);
				break;
			case 7:
				$this->setAnoIngresoAlpza($value);
				break;
			case 8:
				$this->setDirectorNombre($value);
				break;
			case 9:
				$this->setDirectorEmail($value);
				break;
			case 10:
				$this->setDelegadoNombre($value);
				break;
			case 11:
				$this->setDelegadoApellido($value);
				break;
			case 12:
				$this->setDelegadoCargo($value);
				break;
			case 13:
				$this->setDelegadoProfesion($value);
				break;
			case 14:
				$this->setDelegadoEmail($value);
				break;
			case 15:
				$this->setLogo($value);
				break;
			case 16:
				$this->setDireccion($value);
				break;
			case 17:
				$this->setCodigoPostal($value);
				break;
			case 18:
				$this->setPais($value);
				break;
			case 19:
				$this->setTelefonoCodCiudad($value);
				break;
			case 20:
				$this->setTelefonoCodPais($value);
				break;
			case 21:
				$this->setTelefono($value);
				break;
			case 22:
				$this->setCelular($value);
				break;
			case 23:
				$this->setEmail($value);
				break;
			case 24:
				$this->setFax($value);
				break;
			case 25:
				$this->setSitioWeb($value);
				break;
			case 26:
				$this->setDescripcion($value);
				break;
			case 27:
				$this->setMision($value);
				break;
			case 28:
				$this->setVision($value);
				break;
			case 29:
				$this->setObjetivos($value);
				break;
			case 30:
				$this->setAcreditacionAza($value);
				break;
			case 31:
				$this->setAcreditacionIso14001($value);
				break;
			case 32:
				$this->setAcreditacionIso9001($value);
				break;
			case 33:
				$this->setAcreditacionOtra($value);
				break;
			case 34:
				$this->setAsociacionWaza($value);
				break;
			case 35:
				$this->setAsociacionAza($value);
				break;
			case 36:
				$this->setAsociacionEaza($value);
				break;
			case 37:
				$this->setAsociacionIze($value);
				break;
			case 38:
				$this->setAsociacionAmaczoa($value);
				break;
			case 39:
				$this->setAsociacionIsis($value);
				break;
			case 40:
				$this->setAsociacionOtra($value);
				break;
			case 41:
				$this->setMarcaAnillo($value);
				break;
			case 42:
				$this->setMarcaBanda($value);
				break;
			case 43:
				$this->setMarcaCaliente($value);
				break;
			case 44:
				$this->setMarcaFria($value);
				break;
			case 45:
				$this->setMarcaMicrochip($value);
				break;
			case 46:
				$this->setMarcaNatura($value);
				break;
			case 47:
				$this->setMarcaPiquete($value);
				break;
			case 48:
				$this->setMarcaRaya($value);
				break;
			case 49:
				$this->setMarcaTatuaje($value);
				break;
			case 50:
				$this->setMarcaOtra($value);
				break;
			case 51:
				$this->setVisitasAnuales($value);
				break;
			case 52:
				$this->setPropietario($value);
				break;
			case 53:
				$this->setAdministrador($value);
				break;
			case 54:
				$this->setLucro($value);
				break;
			case 55:
				$this->setOfreceAsesoria($value);
				break;
			case 56:
				$this->setPersonalPermanente($value);
				break;
			case 57:
				$this->setPersonalTemporal($value);
				break;
			case 58:
				$this->setHorarioAtencion($value);
				break;
			case 59:
				$this->setObjetivo($value);
				break;
			case 60:
				$this->setSenalizacionPorcentaje($value);
				break;
			case 61:
				$this->setZoologicoContacto($value);
				break;
			case 62:
				$this->setBoletin($value);
				break;
			case 63:
				$this->setProgramaEnriquecimiento($value);
				break;
			case 64:
				$this->setProgramaEntrenamiento($value);
				break;
			case 65:
				$this->setProgramaManejoAmbiental($value);
				break;
			case 66:
				$this->setProgramaMedicinaPreventiva($value);
				break;
			case 67:
				$this->setConsultaExternaVeterinaria($value);
				break;
			case 68:
				$this->setShow($value);
				break;
			case 69:
				$this->setDocumentoEstrategico($value);
				break;
			case 70:
				$this->setProyectoConservacionExsitu($value);
				break;
			case 71:
				$this->setProyectoConservacionInsitu($value);
				break;
			case 72:
				$this->setAsociacionListaAsociaciones($value);
				break;
			case 73:
				$this->setAsociacionListaInstituciones($value);
				break;
			case 74:
				$this->setAsociacionApoyoDesdeAlpza($value);
				break;
			case 75:
				$this->setAsociacionApoyoHaciaAlpza($value);
				break;
			case 76:
				$this->setAsociacionEstatutos($value);
				break;
			case 77:
				$this->setAsociacionOrganigrama($value);
				break;
			case 78:
				$this->setAsociacionPanoramaPais($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = AlpzaMiembroAsociadosPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setIdAlpzaMiembroAsociados($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setAlpzaMiembroIdAlpzaMiembro($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setNombreFormal($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setSigla($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setTipoInstitucion($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setNumeroIdentificacion($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setAnoFundacion($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setAnoIngresoAlpza($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setDirectorNombre($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setDirectorEmail($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setDelegadoNombre($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setDelegadoApellido($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setDelegadoCargo($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setDelegadoProfesion($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setDelegadoEmail($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setLogo($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setDireccion($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setCodigoPostal($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setPais($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setTelefonoCodCiudad($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setTelefonoCodPais($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setTelefono($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setCelular($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setEmail($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setFax($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setSitioWeb($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setDescripcion($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setMision($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setVision($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setObjetivos($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setAcreditacionAza($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setAcreditacionIso14001($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setAcreditacionIso9001($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setAcreditacionOtra($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setAsociacionWaza($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setAsociacionAza($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setAsociacionEaza($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setAsociacionIze($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setAsociacionAmaczoa($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setAsociacionIsis($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setAsociacionOtra($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setMarcaAnillo($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setMarcaBanda($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setMarcaCaliente($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setMarcaFria($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setMarcaMicrochip($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setMarcaNatura($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setMarcaPiquete($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setMarcaRaya($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setMarcaTatuaje($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setMarcaOtra($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setVisitasAnuales($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setPropietario($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setAdministrador($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setLucro($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setOfreceAsesoria($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setPersonalPermanente($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setPersonalTemporal($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setHorarioAtencion($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setObjetivo($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setSenalizacionPorcentaje($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setZoologicoContacto($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setBoletin($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setProgramaEnriquecimiento($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setProgramaEntrenamiento($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setProgramaManejoAmbiental($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setProgramaMedicinaPreventiva($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setConsultaExternaVeterinaria($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setShow($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setDocumentoEstrategico($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setProyectoConservacionExsitu($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setProyectoConservacionInsitu($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setAsociacionListaAsociaciones($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setAsociacionListaInstituciones($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setAsociacionApoyoDesdeAlpza($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setAsociacionApoyoHaciaAlpza($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setAsociacionEstatutos($arr[$keys[76]]);
		if (array_key_exists($keys[77], $arr)) $this->setAsociacionOrganigrama($arr[$keys[77]]);
		if (array_key_exists($keys[78], $arr)) $this->setAsociacionPanoramaPais($arr[$keys[78]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(AlpzaMiembroAsociadosPeer::DATABASE_NAME);

		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ID_ALPZA_MIEMBRO_ASOCIADOS)) $criteria->add(AlpzaMiembroAsociadosPeer::ID_ALPZA_MIEMBRO_ASOCIADOS, $this->id_alpza_miembro_asociados);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ALPZA_MIEMBRO_ID_ALPZA_MIEMBRO)) $criteria->add(AlpzaMiembroAsociadosPeer::ALPZA_MIEMBRO_ID_ALPZA_MIEMBRO, $this->alpza_miembro_id_alpza_miembro);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::NOMBRE_FORMAL)) $criteria->add(AlpzaMiembroAsociadosPeer::NOMBRE_FORMAL, $this->nombre_formal);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::SIGLA)) $criteria->add(AlpzaMiembroAsociadosPeer::SIGLA, $this->sigla);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::TIPO_INSTITUCION)) $criteria->add(AlpzaMiembroAsociadosPeer::TIPO_INSTITUCION, $this->tipo_institucion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::NUMERO_IDENTIFICACION)) $criteria->add(AlpzaMiembroAsociadosPeer::NUMERO_IDENTIFICACION, $this->numero_identificacion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ANO_FUNDACION)) $criteria->add(AlpzaMiembroAsociadosPeer::ANO_FUNDACION, $this->ano_fundacion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ANO_INGRESO_ALPZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ANO_INGRESO_ALPZA, $this->ano_ingreso_alpza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DIRECTOR_NOMBRE)) $criteria->add(AlpzaMiembroAsociadosPeer::DIRECTOR_NOMBRE, $this->director_nombre);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DIRECTOR_EMAIL)) $criteria->add(AlpzaMiembroAsociadosPeer::DIRECTOR_EMAIL, $this->director_email);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DELEGADO_NOMBRE)) $criteria->add(AlpzaMiembroAsociadosPeer::DELEGADO_NOMBRE, $this->delegado_nombre);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DELEGADO_APELLIDO)) $criteria->add(AlpzaMiembroAsociadosPeer::DELEGADO_APELLIDO, $this->delegado_apellido);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DELEGADO_CARGO)) $criteria->add(AlpzaMiembroAsociadosPeer::DELEGADO_CARGO, $this->delegado_cargo);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DELEGADO_PROFESION)) $criteria->add(AlpzaMiembroAsociadosPeer::DELEGADO_PROFESION, $this->delegado_profesion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DELEGADO_EMAIL)) $criteria->add(AlpzaMiembroAsociadosPeer::DELEGADO_EMAIL, $this->delegado_email);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::LOGO)) $criteria->add(AlpzaMiembroAsociadosPeer::LOGO, $this->logo);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DIRECCION)) $criteria->add(AlpzaMiembroAsociadosPeer::DIRECCION, $this->direccion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::CODIGO_POSTAL)) $criteria->add(AlpzaMiembroAsociadosPeer::CODIGO_POSTAL, $this->codigo_postal);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PAIS)) $criteria->add(AlpzaMiembroAsociadosPeer::PAIS, $this->pais);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::TELEFONO_COD_CIUDAD)) $criteria->add(AlpzaMiembroAsociadosPeer::TELEFONO_COD_CIUDAD, $this->telefono_cod_ciudad);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::TELEFONO_COD_PAIS)) $criteria->add(AlpzaMiembroAsociadosPeer::TELEFONO_COD_PAIS, $this->telefono_cod_pais);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::TELEFONO)) $criteria->add(AlpzaMiembroAsociadosPeer::TELEFONO, $this->telefono);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::CELULAR)) $criteria->add(AlpzaMiembroAsociadosPeer::CELULAR, $this->celular);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::EMAIL)) $criteria->add(AlpzaMiembroAsociadosPeer::EMAIL, $this->email);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::FAX)) $criteria->add(AlpzaMiembroAsociadosPeer::FAX, $this->fax);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::SITIO_WEB)) $criteria->add(AlpzaMiembroAsociadosPeer::SITIO_WEB, $this->sitio_web);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DESCRIPCION)) $criteria->add(AlpzaMiembroAsociadosPeer::DESCRIPCION, $this->descripcion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MISION)) $criteria->add(AlpzaMiembroAsociadosPeer::MISION, $this->mision);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::VISION)) $criteria->add(AlpzaMiembroAsociadosPeer::VISION, $this->vision);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::OBJETIVOS)) $criteria->add(AlpzaMiembroAsociadosPeer::OBJETIVOS, $this->objetivos);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ACREDITACION_AZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ACREDITACION_AZA, $this->acreditacion_aza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ACREDITACION_ISO14001)) $criteria->add(AlpzaMiembroAsociadosPeer::ACREDITACION_ISO14001, $this->acreditacion_iso14001);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ACREDITACION_ISO9001)) $criteria->add(AlpzaMiembroAsociadosPeer::ACREDITACION_ISO9001, $this->acreditacion_iso9001);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ACREDITACION_OTRA)) $criteria->add(AlpzaMiembroAsociadosPeer::ACREDITACION_OTRA, $this->acreditacion_otra);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_WAZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_WAZA, $this->asociacion_waza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_AZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_AZA, $this->asociacion_aza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_EAZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_EAZA, $this->asociacion_eaza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_IZE)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_IZE, $this->asociacion_ize);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_AMACZOA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_AMACZOA, $this->asociacion_amaczoa);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_ISIS)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_ISIS, $this->asociacion_isis);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_OTRA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_OTRA, $this->asociacion_otra);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_ANILLO)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_ANILLO, $this->marca_anillo);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_BANDA)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_BANDA, $this->marca_banda);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_CALIENTE)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_CALIENTE, $this->marca_caliente);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_FRIA)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_FRIA, $this->marca_fria);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_MICROCHIP)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_MICROCHIP, $this->marca_microchip);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_NATURA)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_NATURA, $this->marca_natura);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_PIQUETE)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_PIQUETE, $this->marca_piquete);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_RAYA)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_RAYA, $this->marca_raya);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_TATUAJE)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_TATUAJE, $this->marca_tatuaje);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::MARCA_OTRA)) $criteria->add(AlpzaMiembroAsociadosPeer::MARCA_OTRA, $this->marca_otra);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::VISITAS_ANUALES)) $criteria->add(AlpzaMiembroAsociadosPeer::VISITAS_ANUALES, $this->visitas_anuales);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROPIETARIO)) $criteria->add(AlpzaMiembroAsociadosPeer::PROPIETARIO, $this->propietario);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ADMINISTRADOR)) $criteria->add(AlpzaMiembroAsociadosPeer::ADMINISTRADOR, $this->administrador);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::LUCRO)) $criteria->add(AlpzaMiembroAsociadosPeer::LUCRO, $this->lucro);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::OFRECE_ASESORIA)) $criteria->add(AlpzaMiembroAsociadosPeer::OFRECE_ASESORIA, $this->ofrece_asesoria);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PERSONAL_PERMANENTE)) $criteria->add(AlpzaMiembroAsociadosPeer::PERSONAL_PERMANENTE, $this->personal_permanente);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PERSONAL_TEMPORAL)) $criteria->add(AlpzaMiembroAsociadosPeer::PERSONAL_TEMPORAL, $this->personal_temporal);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::HORARIO_ATENCION)) $criteria->add(AlpzaMiembroAsociadosPeer::HORARIO_ATENCION, $this->horario_atencion);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::OBJETIVO)) $criteria->add(AlpzaMiembroAsociadosPeer::OBJETIVO, $this->objetivo);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::SENALIZACION_PORCENTAJE)) $criteria->add(AlpzaMiembroAsociadosPeer::SENALIZACION_PORCENTAJE, $this->senalizacion_porcentaje);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ZOOLOGICO_CONTACTO)) $criteria->add(AlpzaMiembroAsociadosPeer::ZOOLOGICO_CONTACTO, $this->zoologico_contacto);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::BOLETIN)) $criteria->add(AlpzaMiembroAsociadosPeer::BOLETIN, $this->boletin);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROGRAMA_ENRIQUECIMIENTO)) $criteria->add(AlpzaMiembroAsociadosPeer::PROGRAMA_ENRIQUECIMIENTO, $this->programa_enriquecimiento);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROGRAMA_ENTRENAMIENTO)) $criteria->add(AlpzaMiembroAsociadosPeer::PROGRAMA_ENTRENAMIENTO, $this->programa_entrenamiento);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROGRAMA_MANEJO_AMBIENTAL)) $criteria->add(AlpzaMiembroAsociadosPeer::PROGRAMA_MANEJO_AMBIENTAL, $this->programa_manejo_ambiental);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROGRAMA_MEDICINA_PREVENTIVA)) $criteria->add(AlpzaMiembroAsociadosPeer::PROGRAMA_MEDICINA_PREVENTIVA, $this->programa_medicina_preventiva);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::CONSULTA_EXTERNA_VETERINARIA)) $criteria->add(AlpzaMiembroAsociadosPeer::CONSULTA_EXTERNA_VETERINARIA, $this->consulta_externa_veterinaria);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::SHOW)) $criteria->add(AlpzaMiembroAsociadosPeer::SHOW, $this->show);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::DOCUMENTO_ESTRATEGICO)) $criteria->add(AlpzaMiembroAsociadosPeer::DOCUMENTO_ESTRATEGICO, $this->documento_estrategico);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROYECTO_CONSERVACION_EXSITU)) $criteria->add(AlpzaMiembroAsociadosPeer::PROYECTO_CONSERVACION_EXSITU, $this->proyecto_conservacion_exsitu);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::PROYECTO_CONSERVACION_INSITU)) $criteria->add(AlpzaMiembroAsociadosPeer::PROYECTO_CONSERVACION_INSITU, $this->proyecto_conservacion_insitu);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_LISTA_ASOCIACIONES)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_LISTA_ASOCIACIONES, $this->asociacion_lista_asociaciones);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_LISTA_INSTITUCIONES)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_LISTA_INSTITUCIONES, $this->asociacion_lista_instituciones);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_APOYO_DESDE_ALPZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_APOYO_DESDE_ALPZA, $this->asociacion_apoyo_desde_alpza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_APOYO_HACIA_ALPZA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_APOYO_HACIA_ALPZA, $this->asociacion_apoyo_hacia_alpza);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_ESTATUTOS)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_ESTATUTOS, $this->asociacion_estatutos);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_ORGANIGRAMA)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_ORGANIGRAMA, $this->asociacion_organigrama);
		if ($this->isColumnModified(AlpzaMiembroAsociadosPeer::ASOCIACION_PANORAMA_PAIS)) $criteria->add(AlpzaMiembroAsociadosPeer::ASOCIACION_PANORAMA_PAIS, $this->asociacion_panorama_pais);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(AlpzaMiembroAsociadosPeer::DATABASE_NAME);

		$criteria->add(AlpzaMiembroAsociadosPeer::ID_ALPZA_MIEMBRO_ASOCIADOS, $this->id_alpza_miembro_asociados);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getIdAlpzaMiembroAsociados();
	}

	/**
	 * Generic method to set the primary key (id_alpza_miembro_asociados column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setIdAlpzaMiembroAsociados($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of AlpzaMiembroAsociados (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setAlpzaMiembroIdAlpzaMiembro($this->alpza_miembro_id_alpza_miembro);

		$copyObj->setNombreFormal($this->nombre_formal);

		$copyObj->setSigla($this->sigla);

		$copyObj->setTipoInstitucion($this->tipo_institucion);

		$copyObj->setNumeroIdentificacion($this->numero_identificacion);

		$copyObj->setAnoFundacion($this->ano_fundacion);

		$copyObj->setAnoIngresoAlpza($this->ano_ingreso_alpza);

		$copyObj->setDirectorNombre($this->director_nombre);

		$copyObj->setDirectorEmail($this->director_email);

		$copyObj->setDelegadoNombre($this->delegado_nombre);

		$copyObj->setDelegadoApellido($this->delegado_apellido);

		$copyObj->setDelegadoCargo($this->delegado_cargo);

		$copyObj->setDelegadoProfesion($this->delegado_profesion);

		$copyObj->setDelegadoEmail($this->delegado_email);

		$copyObj->setLogo($this->logo);

		$copyObj->setDireccion($this->direccion);

		$copyObj->setCodigoPostal($this->codigo_postal);

		$copyObj->setPais($this->pais);

		$copyObj->setTelefonoCodCiudad($this->telefono_cod_ciudad);

		$copyObj->setTelefonoCodPais($this->telefono_cod_pais);

		$copyObj->setTelefono($this->telefono);

		$copyObj->setCelular($this->celular);

		$copyObj->setEmail($this->email);

		$copyObj->setFax($this->fax);

		$copyObj->setSitioWeb($this->sitio_web);

		$copyObj->setDescripcion($this->descripcion);

		$copyObj->setMision($this->mision);

		$copyObj->setVision($this->vision);

		$copyObj->setObjetivos($this->objetivos);

		$copyObj->setAcreditacionAza($this->acreditacion_aza);

		$copyObj->setAcreditacionIso14001($this->acreditacion_iso14001);

		$copyObj->setAcreditacionIso9001($this->acreditacion_iso9001);

		$copyObj->setAcreditacionOtra($this->acreditacion_otra);

		$copyObj->setAsociacionWaza($this->asociacion_waza);

		$copyObj->setAsociacionAza($this->asociacion_aza);

		$copyObj->setAsociacionEaza($this->asociacion_eaza);

		$copyObj->setAsociacionIze($this->asociacion_ize);

		$copyObj->setAsociacionAmaczoa($this->asociacion_amaczoa);

		$copyObj->setAsociacionIsis($this->asociacion_isis);

		$copyObj->setAsociacionOtra($this->asociacion_otra);

		$copyObj->setMarcaAnillo($this->marca_anillo);

		$copyObj->setMarcaBanda($this->marca_banda);

		$copyObj->setMarcaCaliente($this->marca_caliente);

		$copyObj->setMarcaFria($this->marca_fria);

		$copyObj->setMarcaMicrochip($this->marca_microchip);

		$copyObj->setMarcaNatura($this->marca_natura);

		$copyObj->setMarcaPiquete($this->marca_piquete);

		$copyObj->setMarcaRaya($this->marca_raya);

		$copyObj->setMarcaTatuaje($this->marca_tatuaje);

		$copyObj->setMarcaOtra($this->marca_otra);

		$copyObj->setVisitasAnuales($this->visitas_anuales);

		$copyObj->setPropietario($this->propietario);

		$copyObj->setAdministrador($this->administrador);

		$copyObj->setLucro($this->lucro);

		$copyObj->setOfreceAsesoria($this->ofrece_asesoria);

		$copyObj->setPersonalPermanente($this->personal_permanente);

		$copyObj->setPersonalTemporal($this->personal_temporal);

		$copyObj->setHorarioAtencion($this->horario_atencion);

		$copyObj->setObjetivo($this->objetivo);

		$copyObj->setSenalizacionPorcentaje($this->senalizacion_porcentaje);

		$copyObj->setZoologicoContacto($this->zoologico_contacto);

		$copyObj->setBoletin($this->boletin);

		$copyObj->setProgramaEnriquecimiento($this->programa_enriquecimiento);

		$copyObj->setProgramaEntrenamiento($this->programa_entrenamiento);

		$copyObj->setProgramaManejoAmbiental($this->programa_manejo_ambiental);

		$copyObj->setProgramaMedicinaPreventiva($this->programa_medicina_preventiva);

		$copyObj->setConsultaExternaVeterinaria($this->consulta_externa_veterinaria);

		$copyObj->setShow($this->show);

		$copyObj->setDocumentoEstrategico($this->documento_estrategico);

		$copyObj->setProyectoConservacionExsitu($this->proyecto_conservacion_exsitu);

		$copyObj->setProyectoConservacionInsitu($this->proyecto_conservacion_insitu);

		$copyObj->setAsociacionListaAsociaciones($this->asociacion_lista_asociaciones);

		$copyObj->setAsociacionListaInstituciones($this->asociacion_lista_instituciones);

		$copyObj->setAsociacionApoyoDesdeAlpza($this->asociacion_apoyo_desde_alpza);

		$copyObj->setAsociacionApoyoHaciaAlpza($this->asociacion_apoyo_hacia_alpza);

		$copyObj->setAsociacionEstatutos($this->asociacion_estatutos);

		$copyObj->setAsociacionOrganigrama($this->asociacion_organigrama);

		$copyObj->setAsociacionPanoramaPais($this->asociacion_panorama_pais);


		$copyObj->setNew(true);

		$copyObj->setIdAlpzaMiembroAsociados(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     AlpzaMiembroAsociados Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     AlpzaMiembroAsociadosPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new AlpzaMiembroAsociadosPeer();
		}
		return self::$peer;
	}

	/**
	 * Declares an association between this object and a AlpzaMiembro object.
	 *
	 * @param      AlpzaMiembro $v
	 * @return     AlpzaMiembroAsociados The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setAlpzaMiembro(AlpzaMiembro $v = null)
	{
		if ($v === null) {
			$this->setAlpzaMiembroIdAlpzaMiembro(NULL);
		} else {
			$this->setAlpzaMiembroIdAlpzaMiembro($v->getIdAlpzaMiembro());
		}

		$this->aAlpzaMiembro = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the AlpzaMiembro object, it will not be re-added.
		if ($v !== null) {
			$v->addAlpzaMiembroAsociados($this);
		}

		return $this;
	}


	/**
	 * Get the associated AlpzaMiembro object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     AlpzaMiembro The associated AlpzaMiembro object.
	 * @throws     PropelException
	 */
	public function getAlpzaMiembro(PropelPDO $con = null)
	{
		if ($this->aAlpzaMiembro === null && ($this->alpza_miembro_id_alpza_miembro !== null)) {
			$this->aAlpzaMiembro = AlpzaMiembroPeer::retrieveByPk($this->alpza_miembro_id_alpza_miembro);
			/* The following can be used additionally to
			 guarantee the related object contains a reference
			 to this object.  This level of coupling may, however, be
			 undesirable since it could result in an only partially populated collection
			 in the referenced object.
			 $this->aAlpzaMiembro->addAlpzaMiembroAsociadoss($this);
			 */
		}
		return $this->aAlpzaMiembro;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

		$this->aAlpzaMiembro = null;
	}

	// symfony_behaviors behavior

	/**
	 * Calls methods defined via {@link sfMixer}.
	 */
	public function __call($method, $arguments)
	{
		if (!$callable = sfMixer::getCallable('BaseAlpzaMiembroAsociados:'.$method))
		{
			throw new sfException(sprintf('Call to undefined method BaseAlpzaMiembroAsociados::%s', $method));
		}

		array_unshift($arguments, $this);

		return call_user_func_array($callable, $arguments);
	}

} // BaseAlpzaMiembroAsociados
